{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_4 - Presentasi Final test\\\\client\\\\src\\\\components\\\\beranda-pages\\\\transactionsList.js\";\nimport React, { Component } from 'react'; // import CUSTOMER from './customer/customers';\n\nimport { Container, Row, Col, Dropdown } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { checkTransaction } from \"../redux/actions/listTransactions\";\nimport { updateTransactionUser } from \"../redux/actions/updateTransaction\";\nimport moment from 'moment';\n\nclass ListTransactions extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      //const { data } = this.state;\n      console.log(event.target.value); // this.setState({\n      // data: { ...data, [event.target.name]: event.target.value },\n      // });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      console.log(event.target.value); //this.props.updateTransactionUser(event);\n      // this.setState({ data: {} });\n      // this.props.onHide()\n    };\n  }\n\n  componentDidMount() {\n    this.props.checkTransaction();\n  }\n\n  render() {\n    const {\n      data: listTransactions\n    } = this.props.listTransaction;\n    console.log(listTransactions);\n    let LIST = Object.values(listTransactions);\n    let color_second = '#2B2B2B';\n    let color_third = '#1F1F1F';\n    let x = '';\n    let num = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        background: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 80,\n        background: \"#1F1F1F\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      className: \"mt-5 text-left text-white font-weight-bold\",\n      style: {\n        width: '100%',\n        height: 20,\n        marginLeft: '15%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"Incoming Transaction\")))), /*#__PURE__*/React.createElement(Container, {\n      className: \"  mt-5 bg-dark text-white\",\n      style: {\n        width: 900,\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        fontSize: 14,\n        color: '#EE4622',\n        backgroundColor: '#1F1F1F'\n      },\n      className: \"py-3 text-left  border-bottom border-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Users\"), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Bukti Transfer\"), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Remaining Active\"), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Status User\"), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Status payment\"), /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Action\")), LIST.map(customer => {\n      let statusX = customer.User.subscribe;\n      let STATUS_PAYMENT = customer.status;\n      let color = '#FF0742';\n      let colorPay = '';\n      let colorAct = '#1C9CD2';\n      let stat = 'Not Active';\n      let pay = 'Pending';\n\n      if (statusX === 'Active' || statusX === true) {\n        color = '#0ACF83';\n        stat = 'Active';\n      }\n\n      if (STATUS_PAYMENT === 'Active' || STATUS_PAYMENT === 'Approved') {\n        colorPay = '#0ACF83';\n        pay = 'Approved';\n      } else if (STATUS_PAYMENT === 'pending') {\n        colorPay = '#F58033';\n      } else if (STATUS_PAYMENT === 'Cancel') {\n        pay = 'Cancel';\n      }\n\n      x = customer.id % 2 === 1 ? x = color_second : x = color_third;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: customer.id,\n        className: \"text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          fontSize: 14,\n          background: x\n        },\n        className: \"my-0 dropdrop2    \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 1,\n        xs: 1,\n        className: \" border-bottom border-light py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, ++num), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        xs: 1,\n        className: \" border-bottom border-light py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, customer.User.fullName), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        xs: 1,\n        className: \" border-bottom border-light py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }, customer.attach.substr(-9)), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        xs: 1,\n        className: \" border-bottom border-light py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, moment(customer.dueDate).diff(moment(customer.startDate), 'days', true), \" days\"), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        style: {\n          color: `${color}`,\n          fontWeight: 'bold'\n        },\n        xs: 1,\n        className: \" border-bottom border-light py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, stat), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        style: {\n          color: `${colorPay}`,\n          fontWeight: 'bold'\n        },\n        xs: 1,\n        className: \" border-bottom border-light py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: `${colorPay}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }, \" \", pay, \" \")), /*#__PURE__*/React.createElement(Col, {\n        md: 1,\n        xs: 1,\n        className: \" border-bottom border-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        variant: \"\",\n        id: \"dropdown-basic\",\n        className: \"caret dropdrop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-caret-down\",\n        style: {\n          color: `${colorAct}`,\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 47\n        }\n      }))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        className: \"dropdown-menu-list-js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        value: \"Approved\",\n        className: \"text-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 41\n        }\n      }, \"Approved\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        value: \"Cancel\",\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        value: \"Pending\",\n        className: \"text-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      }, \"Pending\"))))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 400\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTransaction: state.listTransaction,\n    updateTransaction: state.updateTransaction\n  };\n};\n\nexport default connect(mapStateToProps, {\n  checkTransaction,\n  updateTransactionUser\n})(ListTransactions);","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/beranda-pages/transactionsList.js"],"names":["React","Component","Container","Row","Col","Dropdown","connect","checkTransaction","updateTransactionUser","moment","ListTransactions","handleChange","event","console","log","target","value","handleSubmit","preventDefault","componentDidMount","props","render","data","listTransactions","listTransaction","LIST","Object","values","color_second","color_third","x","num","background","height","width","marginLeft","fontSize","color","backgroundColor","map","customer","statusX","User","subscribe","STATUS_PAYMENT","status","colorPay","colorAct","stat","pay","id","fullName","attach","substr","dueDate","diff","startDate","fontWeight","mapStateToProps","state","updateTransaction"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import CUSTOMER from './customer/customers';\r\nimport { Container,Row,Col, Dropdown } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { checkTransaction } from \"../redux/actions/listTransactions\";\r\nimport { updateTransactionUser } from \"../redux/actions/updateTransaction\";\r\nimport moment from 'moment';\r\n\r\nclass ListTransactions extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.checkTransaction()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        //const { data } = this.state;\r\n        console.log(event.target.value)\r\n        // this.setState({\r\n        // data: { ...data, [event.target.name]: event.target.value },\r\n        // });\r\n    };\r\n    \r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target.value)\r\n        //this.props.updateTransactionUser(event);\r\n        // this.setState({ data: {} });\r\n        // this.props.onHide()\r\n    };\r\n\r\n    render(){\r\n\r\n        const { data: listTransactions } = this.props.listTransaction;\r\n        console.log(listTransactions);\r\n        let LIST = Object.values(listTransactions);\r\n\r\n        let color_second = '#2B2B2B';\r\n        let color_third = '#1F1F1F';\r\n        let x = '';\r\n        let num = 0;\r\n\r\n        return (\r\n            <div className=\"\" style={{ background: 'black'}}>\r\n                <div style={{height: 80, background: \"#1F1F1F\"}}></div>\r\n            <Container className='mt-5 text-left text-white font-weight-bold' style={{width: '100%', height: 20, marginLeft:'15%'}}>\r\n                <Row>\r\n                    <Col>\r\n                        <h5>Incoming Transaction</h5>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container className='  mt-5 bg-dark text-white' style={{width: 900, height: '100%'}}>\r\n                <Row style={{fontSize: 14, color: '#EE4622', backgroundColor: '#1F1F1F'}} className=\"py-3 text-left  border-bottom border-light\">\r\n                    <Col md={1} xs={1}>\r\n                    No\r\n                    </Col>\r\n                    <Col md={2} xs={1}>\r\n                    Users\r\n                    </Col>\r\n                    <Col md={2} xs={1}>\r\n                    Bukti Transfer\r\n                    </Col>\r\n                    <Col md={2} xs={1}>\r\n                    Remaining Active\r\n                    </Col>\r\n                    <Col md={2} xs={1}>\r\n                    Status User\r\n                    </Col>\r\n                    <Col md={2} xs={1}>\r\n                    Status payment\r\n                    </Col>\r\n                    <Col md={1} xs={1}>\r\n                    Action\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                LIST.map( customer => { \r\n                    let statusX = customer.User.subscribe\r\n                    let STATUS_PAYMENT = customer.status\r\n                \r\n                    let color = '#FF0742'\r\n                    let colorPay = ''\r\n                    let colorAct = '#1C9CD2'\r\n\r\n                    let stat = 'Not Active'\r\n                    let pay = 'Pending'\r\n\r\n                    if ( statusX === 'Active' || statusX === true ){\r\n                        color = '#0ACF83'\r\n                        stat = 'Active'\r\n                    }\r\n\r\n                    if ( STATUS_PAYMENT === 'Active' || STATUS_PAYMENT === 'Approved' ){\r\n                        colorPay = '#0ACF83'\r\n                        pay = 'Approved'\r\n                    }else if ( STATUS_PAYMENT === 'pending'){\r\n                        colorPay = '#F58033'\r\n                    }else if (STATUS_PAYMENT === 'Cancel'){\r\n                        pay = 'Cancel'\r\n                    }\r\n\r\n                    \r\n                    x = customer.id % 2 === 1 ? (x = color_second) : (x = color_third)\r\n                    \r\n\r\n                    return <div key={customer.id} className=\"text-left\">\r\n                        <Row style={{fontSize: 14, background: x }} className=\"my-0 dropdrop2    \">\r\n\r\n                            <Col md={1}  xs={1} className=' border-bottom border-light py-3'>\r\n                                {++num}\r\n                            </Col>\r\n                            <Col md={2} xs={1} className=' border-bottom border-light py-3'>\r\n                                {customer.User.fullName}\r\n                            </Col>\r\n                            <Col md={2} xs={1} className=' border-bottom border-light py-3'>\r\n                                {customer.attach.substr(-9)}\r\n                            </Col>\r\n                            <Col md={2} xs={1} className=' border-bottom border-light py-3'>\r\n                                { moment(customer.dueDate).diff(moment(customer.startDate), 'days', true)} days\r\n                            </Col>\r\n                            <Col md={2} style={{color: `${color}`, fontWeight: 'bold'}} xs={1} className=' border-bottom border-light py-3'>\r\n                                {stat}\r\n                            </Col>\r\n                            <Col md={2} style={{color: `${colorPay}`, fontWeight: 'bold'}} xs={1} className=' border-bottom border-light py-3'>\r\n                                <span style={{color: `${colorPay}`}}> {pay} </span>\r\n                            </Col>\r\n                            <Col md={1} xs={1} className=' border-bottom border-light'>\r\n                            <Dropdown onChange={this.handleChange} >\r\n                                    <Dropdown.Toggle variant=\"\" id=\"dropdown-basic\" className=\"caret dropdrop\">\r\n                                        <span><i className='fas fa-caret-down' style={{color: `${colorAct}`, fontSize: 18}}></i></span>\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu \r\n                                        className=\"dropdown-menu-list-js\" \r\n                                    >\r\n                                        <Dropdown.Item value=\"Approved\" className=\"text-success\">\r\n                                                Approved\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item value=\"Cancel\" className=\"text-danger\">\r\n                                                Cancel\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item value=\"Pending\" className=\"text-warning\">\r\n                                                Pending\r\n                                        </Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Col>\r\n                        </Row>\r\n                </div>\r\n                })\r\n            }\r\n        </Container>\r\n        <div style={{height: 400}}></div>\r\n    </div>        \r\n        );\r\n    }\r\n    }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        listTransaction: state.listTransaction,\r\n        updateTransaction: state.updateTransaction\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { checkTransaction, updateTransactionUser })(ListTransactions);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}