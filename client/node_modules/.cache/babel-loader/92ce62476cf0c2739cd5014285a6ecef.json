{"ast":null,"code":"import { ADDARTIST } from \"../constants/action-types\";\nimport { API, setAuthToken } from \"../config/api\"; // import moment from 'moment';\n//title, file, year, categoryId, description, titleEpisode, fileEpisode, linkEpisode\n\nexport const addArtist = data => {\n  return {\n    type: ADDARTIST,\n    payload: async () => {\n      try {\n        setAuthToken(localStorage.getItem(\"token\"));\n        const {\n          data: {\n            data\n          }\n        } = await API.post(\"/artists/add\", data);\n        return data;\n      } catch (error) {\n        if (error.response) {\n          const {\n            data,\n            status\n          } = error.response;\n          if (status > 399) throw data.error;\n        }\n      }\n    }\n  };\n}; // export const postEpisodeArtist = ( dataAddEpisode, id ) => {\n//     return {\n//         type: ADDEPISODETVMOVIE,\n//         payload: async () => {\n//         try {\n//             setAuthToken( localStorage.getItem(\"token\") );\n//             const { titleEpisode, fileEpisode, linkEpisode  } = dataAddEpisode;\n//             const formDataEpisode = new FormData();\n//             formDataEpisode.append(\"title\", titleEpisode);\n//             formDataEpisode.append(\"thumbnailFilm\", fileEpisode);\n//             formDataEpisode.append(\"linkFilm\", linkEpisode);\n//             formDataEpisode.append(\"filmId\", id);\n//             const config = {\n//                 headers: {\n//                     \"content-type\": \"multipart/form-data\",\n//                 },\n//             };\n//             const {\n//             data: { data: dataEpisode },\n//             } = await API.post(\"/episodes/add\", formDataEpisode, config);\n//             return dataEpisode;\n//         } catch (error) {\n//             if (error.response) {\n//             const { data, status } = error.response;\n//             if (status > 399) throw data.error;\n//             }\n//         }\n//         },\n//     };\n// };","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/redux/actions/artists.js"],"names":["ADDARTIST","API","setAuthToken","addArtist","data","type","payload","localStorage","getItem","post","error","response","status"],"mappings":"AAAA,SAASA,SAAT,QAA0B,2BAA1B;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,eAAlC,C,CACA;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAKC,IAAF,IAAY;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEL,SADH;AAEHM,IAAAA,OAAO,EAAE,YAAY;AACrB,UAAI;AACAJ,QAAAA,YAAY,CAAEK,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAF,CAAZ;AAEA,cAAM;AACNJ,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF;AADA,YAEF,MAAMH,GAAG,CAACQ,IAAJ,CAAS,cAAT,EAAyBL,IAAzB,CAFV;AAIA,eAAOA,IAAP;AACH,OARD,CAQE,OAAOM,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACC,QAAV,EAAoB;AACpB,gBAAM;AAAEP,YAAAA,IAAF;AAAQQ,YAAAA;AAAR,cAAmBF,KAAK,CAACC,QAA/B;AAEA,cAAIC,MAAM,GAAG,GAAb,EAAkB,MAAMR,IAAI,CAACM,KAAX;AACjB;AACJ;AACA;AAlBE,GAAP;AAoBH,CArBM,C,CAuBP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ADDARTIST } from \"../constants/action-types\";\r\nimport { API, setAuthToken } from \"../config/api\";\r\n// import moment from 'moment';\r\n\r\n//title, file, year, categoryId, description, titleEpisode, fileEpisode, linkEpisode\r\nexport const addArtist = ( data ) => {\r\n    return {\r\n        type: ADDARTIST,\r\n        payload: async () => {\r\n        try {\r\n            setAuthToken( localStorage.getItem(\"token\") );\r\n\r\n            const {\r\n            data: { data },\r\n            } = await API.post(\"/artists/add\", data);\r\n            \r\n            return data;\r\n        } catch (error) {\r\n            if (error.response) {\r\n            const { data, status } = error.response;\r\n\r\n            if (status > 399) throw data.error;\r\n            }\r\n        }\r\n        },\r\n    };\r\n};\r\n\r\n// export const postEpisodeArtist = ( dataAddEpisode, id ) => {\r\n//     return {\r\n//         type: ADDEPISODETVMOVIE,\r\n//         payload: async () => {\r\n//         try {\r\n//             setAuthToken( localStorage.getItem(\"token\") );\r\n\r\n//             const { titleEpisode, fileEpisode, linkEpisode  } = dataAddEpisode;\r\n\r\n//             const formDataEpisode = new FormData();\r\n//             formDataEpisode.append(\"title\", titleEpisode);\r\n//             formDataEpisode.append(\"thumbnailFilm\", fileEpisode);\r\n//             formDataEpisode.append(\"linkFilm\", linkEpisode);\r\n//             formDataEpisode.append(\"filmId\", id);\r\n\r\n//             const config = {\r\n//                 headers: {\r\n//                     \"content-type\": \"multipart/form-data\",\r\n//                 },\r\n//             };\r\n\r\n//             const {\r\n//             data: { data: dataEpisode },\r\n//             } = await API.post(\"/episodes/add\", formDataEpisode, config);\r\n            \r\n//             return dataEpisode;\r\n//         } catch (error) {\r\n//             if (error.response) {\r\n//             const { data, status } = error.response;\r\n\r\n//             if (status > 399) throw data.error;\r\n//             }\r\n//         }\r\n//         },\r\n//     };\r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}