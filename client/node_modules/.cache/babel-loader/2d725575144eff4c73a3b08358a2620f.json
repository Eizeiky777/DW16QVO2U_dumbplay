{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_1\\\\dumbflix_ORM\\\\src\\\\components\\\\private\\\\privateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nexport const PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/',\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_1/dumbflix_ORM/src/components/private/privateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","isAuthenticated","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,eAAvB;AAAwC,KAAGC;AAA3C,CAAD,kBACxB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAC1BF,eAAe,gBAEP,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFO,gBAMP,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAxB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADG","sourcesContent":["import React from 'react';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({component: Component, isAuthenticated, ...rest}) => (\r\n    <Route {...rest} render={props => (\r\n        isAuthenticated\r\n            ? (\r\n                <Component {...props}/>\r\n            )\r\n            :\r\n            (\r\n                <Redirect to={{ pathname: '/', state: {from: props.location} }}/>\r\n            )\r\n    )}/>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}