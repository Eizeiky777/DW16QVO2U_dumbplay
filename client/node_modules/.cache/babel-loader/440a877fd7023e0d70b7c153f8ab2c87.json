{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_4 - Presentasi Final test\\\\client\\\\src\\\\components\\\\beranda\\\\movielist.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport Movies from './movies/movies_';\nimport MoviesExtras from './movies/moviesExtra';\nimport Tv from './tv/tv_';\nimport TvExtra from './tv/tvExtra';\nimport { connect } from \"react-redux\";\nimport { getMusics } from \"../redux/actions/musics\";\n\nclass MusicList extends Component {\n  componentDidMount() {\n    this.props.getMusics();\n  }\n\n  render() {\n    const {\n      data: dataMusic\n    } = this.props.music;\n    console.log(dataMusic);\n    const musicX = Object.values(dataMusic);\n    let {\n      ids,\n      homi\n    } = this.props;\n    let status = localStorage.getItem('token');\n\n    if (homi === \"homes\") {\n      this.displayTv = \"flex\";\n      this.displayMovies = \"flex\";\n      this.displayTvExtras = \"none\";\n      this.displayMovieExtras = \"none\";\n    } else if (homi !== \"homes\" && ids === 2) {\n      this.displayTv = \"flex\";\n      this.displayMovies = \"none\";\n      this.displayTvExtras = \"flex\";\n      this.displayMovieExtras = \"none\";\n    } else {\n      this.displayTv = \"none\";\n      this.displayMovies = \"flex\";\n      this.displayMovieExtras = \"flex\";\n      this.displayTvExtras = \"none\";\n    }\n\n    const display = {\n      tv: {\n        display: `${this.displayTv}`\n      },\n      movies: {\n        display: `${this.displayMovies}`\n      },\n      tvExtras: {\n        display: `${this.displayTvExtras}`\n      },\n      moviesExtras: {\n        display: `${this.displayMovieExtras}`\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: divPembungkus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-light\",\n      id: \"tv-show\",\n      style: display.tv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"TV Series\"), /*#__PURE__*/React.createElement(Row, {\n      style: display.tv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, musicX.map(x => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 2,\n        lg: 2,\n        className: \"\",\n        key: x.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/detail/\" + x.id + \"/\" + x.Artist.type + \"/\" + status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: `http://localhost:5000/public/${x.thumbnail}`,\n        style: setGambar,\n        key: x.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold\",\n        style: {\n          overflow: \"hidden\",\n          width: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }\n      }, x.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-light pl-4 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 49\n        }\n      }, x.year)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 45\n        }\n      }, x.Artist.name)));\n    })), /*#__PURE__*/React.createElement(Row, {\n      style: display.tvExtras,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, TvExtra.map(tvvv => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 3,\n        lg: 2,\n        className: \"m-3 \",\n        key: tvvv.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: tvvv.image,\n        style: setGambar,\n        key: tvvv.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }\n      }, tvvv.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, tvvv.year)));\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-light\",\n      id: \"movies\",\n      style: display.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Movies\"), /*#__PURE__*/React.createElement(Row, {\n      style: display.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, Movies.map(movie => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 2,\n        lg: 2,\n        className: \"mt-2\",\n        key: movie.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/detail/\" + movie.id + \"/\" + movie.genre + \"/guest\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: movie.image,\n        style: setGambar,\n        key: movie.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 105\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 41\n        }\n      }, movie.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 41\n        }\n      }, movie.year)));\n    })), /*#__PURE__*/React.createElement(Row, {\n      style: display.moviesExtras,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, MoviesExtras.map(movieExtra => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 3,\n        lg: 2,\n        className: \"m-3\",\n        key: movieExtra.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: movieExtra.image,\n        style: setGambar,\n        key: movieExtra.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, movieExtra.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }, movieExtra.year)));\n    }))));\n  }\n\n}\n\nconst setGambar = {\n  border: '2px solid white',\n  width: '180px',\n  heiight: '180px'\n};\nconst divPembungkus = {\n  backgroundColor: 'black',\n  marginTop: -35,\n  boxShadow: '-6px -42px 69px -8px rgba(0,0,0,0.75)',\n  paddingBottom: 20\n};\n\nconst mapStateToProps = state => {\n  return {\n    music: state.music\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMusics\n})(MusicList);","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/beranda/movielist.js"],"names":["React","Component","Container","Row","Col","Image","Link","Movies","MoviesExtras","Tv","TvExtra","connect","getMusics","MusicList","componentDidMount","props","render","data","dataMusic","music","console","log","musicX","Object","values","ids","homi","status","localStorage","getItem","displayTv","displayMovies","displayTvExtras","displayMovieExtras","display","tv","movies","tvExtras","moviesExtras","divPembungkus","map","x","id","Artist","type","thumbnail","setGambar","overflow","width","title","year","name","tvvv","image","movie","genre","movieExtra","border","heiight","backgroundColor","marginTop","boxShadow","paddingBottom","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Movies from './movies/movies_';\r\nimport MoviesExtras from './movies/moviesExtra';\r\nimport Tv from './tv/tv_';\r\nimport TvExtra from './tv/tvExtra';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getMusics } from \"../redux/actions/musics\";\r\n\r\n\r\nclass MusicList extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getMusics();\r\n    }\r\n\r\n\r\n    render(){\r\n        const { data: dataMusic } = this.props.music;\r\n        console.log(dataMusic);\r\n        const musicX = Object.values(dataMusic);\r\n\r\n        let { ids, homi } = this.props;\r\n\r\n        let status = localStorage.getItem('token');\r\n    \r\n        if( homi === \"homes\" ){\r\n            this.displayTv = \"flex\";\r\n            this.displayMovies = \"flex\";\r\n            this.displayTvExtras = \"none\";\r\n            this.displayMovieExtras = \"none\";\r\n        }else if ( homi !== \"homes\" && ids === 2  ){\r\n            this.displayTv = \"flex\";\r\n            this.displayMovies = \"none\";\r\n            this.displayTvExtras = \"flex\";\r\n            this.displayMovieExtras = \"none\";\r\n        }else{\r\n            this.displayTv = \"none\";\r\n            this.displayMovies = \"flex\";\r\n            this.displayMovieExtras = \"flex\";\r\n            this.displayTvExtras = \"none\";\r\n        }\r\n\r\n        const display = {\r\n            tv:{\r\n                display: `${this.displayTv}`\r\n            },\r\n            movies:{\r\n                display: `${this.displayMovies}`\r\n            },\r\n            tvExtras:{\r\n                display: `${this.displayTvExtras}`\r\n            },\r\n            moviesExtras:{\r\n                display: `${this.displayMovieExtras}`\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div style={divPembungkus}>\r\n            \r\n            <Container className=\"pt-3\">\r\n                <div className=\"text-light\" id=\"tv-show\" style={display.tv}>TV Series</div>\r\n                <Row style={display.tv}>\r\n                    {\r\n                        musicX.map( x => {\r\n                            return (<Col xs={5} md={2} lg={2} className=\"\" key={x.id}>\r\n                                        <a href={\"/detail/\"+ x.id + \"/\" + x.Artist.type + \"/\" + status} >\r\n                                            <Image src={`http://localhost:5000/public/${x.thumbnail}`} style={setGambar} key={x.id} />\r\n                                        </a>  \r\n                                        <div className=\"pt-1\">\r\n                                            <div className=\"d-inline-flex\">\r\n                                                <p className=\"text-white text-font-weight-bold\" style={{overflow: \"hidden\", width: 100}}>{x.title}</p>\r\n                                                <p className=\"text-white text-font-weight-light pl-4 text-right\">{x.year}</p>\r\n                                            </div>\r\n                                            <p className=\"text-muted text-font-weight-light\">{x.Artist.name}</p>\r\n                                        </div>\r\n                                    </Col>)\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n                <Row style={display.tvExtras}>\r\n                    {\r\n                        TvExtra.map( tvvv => {\r\n                            return <Col xs={5} md={3} lg={2} className=\"m-3 \" key={tvvv.id}>\r\n                                        <Image src={tvvv.image} style={setGambar} key={tvvv.id}/>\r\n                                        <div className=\"pt-1\">\r\n                                        <p  className=\"text-white text-font-weight-bold\">{tvvv.name}</p>\r\n                                        <p className=\"text-muted text-font-weight-light\">{tvvv.year}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n                <hr className=\"bg-white\" />\r\n                <div className=\"text-light\" id=\"movies\" style={display.movies}>Movies</div>\r\n                <Row style={display.movies}>\r\n                    {\r\n                        Movies.map( movie => {\r\n                            return <Col xs={5} md={2} lg={2} className=\"mt-2\" key={movie.id}>\r\n                                        <Link to={\"/detail/\"+ movie.id + \"/\" + movie.genre + \"/guest\"} ><Image src={movie.image} style={setGambar} key={movie.id}/></Link> \r\n                                        <div className=\"pt-1\">\r\n                                        <p  className=\"text-white text-font-weight-bold\">{movie.name}</p>\r\n                                        <p className=\"text-muted text-font-weight-light\">{movie.year}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n                <Row style={display.moviesExtras}>\r\n                    {\r\n                        MoviesExtras.map( movieExtra => {\r\n                            return <Col xs={5} md={3} lg={2} className=\"m-3\" key={movieExtra.id}>\r\n                                        <Image src={movieExtra.image} style={setGambar} key={movieExtra.id}/>\r\n                                        <div className=\"pt-1\">\r\n                                        <p  className=\"text-white text-font-weight-bold\">{movieExtra.name}</p>\r\n                                        <p className=\"text-muted text-font-weight-light\">{movieExtra.year}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst setGambar = {\r\n    border: '2px solid white',\r\n    width: '180px',\r\n    heiight: '180px'\r\n} \r\n\r\nconst divPembungkus = {\r\n    backgroundColor: 'black',\r\n    marginTop: -35,\r\n    boxShadow: '-6px -42px 69px -8px rgba(0,0,0,0.75)',\r\n    paddingBottom: 20,\r\n   \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        music: state.music\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMusics })(MusicList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}