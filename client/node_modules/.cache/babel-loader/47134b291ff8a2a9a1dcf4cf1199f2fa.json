{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_1\\\\dumbflix\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Header from './components/beranda/header';\n\nfunction App() {\n  const [isLogin, setLogin] = useState(false);\n  const [user, setuUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    role: \"\"\n  });\n  const [modalLogin, setModalLogin] = useState(false);\n  const [modalRegister, setModalRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const showModalLogin = () => {\n    setModalLogin(!modalLogin);\n    setModalRegister(false);\n  };\n\n  const showModalRegister = () => {\n    setModalRegister(!modalRegister);\n    setModalLogin(false);\n  };\n\n  const handleLogout = () => {\n    setLogin(false);\n  };\n\n  const userLogin = [{\n    id: 1,\n    name: \"Fadhil Darma Putera Z\",\n    email: \"fadhildarma13@gmail.com\",\n    password: \"admin\",\n    role: \"admin\"\n  }, {\n    id: 2,\n    name: \"User Biasa\",\n    email: \"user@gmail.com\",\n    password: \"user\",\n    role: \"user\"\n  }];\n\n  const handleLogin = payload => {\n    const isValid = userLogin.filter(user => user.email == payload.email && user.password == payload.password);\n\n    if (isValid.length) {\n      setLogin(true);\n      setModalLogin(false);\n    } else {\n      setError(\"invalid email and password\");\n      console.log(\"invalid email and password\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_1/dumbflix/src/App.js"],"names":["React","useState","Header","App","isLogin","setLogin","user","setuUser","id","name","email","role","modalLogin","setModalLogin","modalRegister","setModalRegister","error","setError","showModalLogin","showModalRegister","handleLogout","userLogin","password","handleLogin","payload","isValid","filter","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAACK,IAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC;AAChCO,IAAAA,EAAE,EAAE,EAD4B;AAEhCC,IAAAA,IAAI,EAAE,EAF0B;AAGhCC,IAAAA,KAAK,EAAE,EAHyB;AAIhCC,IAAAA,IAAI,EAAE;AAJ0B,GAAD,CAAjC;AAOA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMiB,cAAc,GAAG,MAAM;AAC3BL,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAG,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAHD;;AAKA,QAAMI,iBAAiB,GAAG,MAAM;AAC9BJ,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMO,YAAY,GAAG,MAAM;AACzBf,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMgB,SAAS,GAAG,CAChB;AACEb,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,uBAFR;AAGEC,IAAAA,KAAK,EAAE,yBAHT;AAIEY,IAAAA,QAAQ,EAAE,OAJZ;AAKEX,IAAAA,IAAI,EAAE;AALR,GADgB,EAQhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,KAAK,EAAE,gBAHT;AAIEY,IAAAA,QAAQ,EAAE,MAJZ;AAKEX,IAAAA,IAAI,EAAE;AALR,GARgB,CAAlB;;AAkBA,QAAMY,WAAW,GAAIC,OAAD,IAAa;AAC/B,UAAMC,OAAO,GAAGJ,SAAS,CAACK,MAAV,CACbpB,IAAD,IAAUA,IAAI,CAACI,KAAL,IAAcc,OAAO,CAACd,KAAtB,IAA+BJ,IAAI,CAACgB,QAAL,IAAiBE,OAAO,CAACF,QADpD,CAAhB;;AAIA,QAAIG,OAAO,CAACE,MAAZ,EAAoB;AAClBtB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAQ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHD,MAGO;AACLI,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;AACF,GAZD;;AAcE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMH;;AAED,eAAe1B,GAAf","sourcesContent":["import React, { useState }  from 'react';\nimport Header from './components/beranda/header';\n\nfunction App() {\n  const [isLogin, setLogin] = useState(false);\n\n  const [user, setuUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    role: \"\",\n  });\n\n  const [modalLogin, setModalLogin] = useState(false);\n  const [modalRegister, setModalRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const showModalLogin = () => {\n    setModalLogin(!modalLogin);\n    setModalRegister(false);\n  };\n\n  const showModalRegister = () => {\n    setModalRegister(!modalRegister);\n    setModalLogin(false);\n  };\n\n  const handleLogout = () => {\n    setLogin(false);\n  };\n\n  const userLogin = [\n    {\n      id: 1,\n      name: \"Fadhil Darma Putera Z\",\n      email: \"fadhildarma13@gmail.com\",\n      password: \"admin\",\n      role: \"admin\",\n    },\n    {\n      id: 2,\n      name: \"User Biasa\",\n      email: \"user@gmail.com\",\n      password: \"user\",\n      role: \"user\",\n    },\n  ];\n\n\n  const handleLogin = (payload) => {\n    const isValid = userLogin.filter(\n      (user) => user.email == payload.email && user.password == payload.password\n    );\n\n    if (isValid.length) {\n      setLogin(true);\n      setModalLogin(false);\n    } else {\n      setError(\"invalid email and password\");\n      console.log(\"invalid email and password\");\n    }\n  };\n\n    return (\n      <div>\n        <Header />\n        \n      </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}