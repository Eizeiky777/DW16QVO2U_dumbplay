{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_4 - Presentasi Final test\\\\client\\\\src\\\\components\\\\beranda-musics\\\\musicPlayer.js\";\nimport React, { Component } from 'react';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport './musicPlayer.css';\n\nclass MusicPlayer extends Component {\n  // console.log(setPlayIndex)\n  // const [ audioInstance, setPlayIndex ] = useState(null);\n  render() {\n    const musicas = Object.values(this.props.music);\n    const playlist = musicas.map(X => ({\n      name: X.title,\n      singer: X.Artist.name,\n      cover: `http://localhost:5000/public/${X.thumbnail}`,\n      musicSrc: X.attach\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '80px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ReactJkMusicPlayer, {\n      mode: \"full\",\n      audioLists: playlist,\n      defaultPlayIndex: 0,\n      autoPlay: false,\n      showDownload: false,\n      showThemeSwitch: false,\n      toggleMode: false,\n      responsive: false,\n      glassBg: true,\n      playIndex: playIndex,\n      onAudioPlay: audioInfo => {\n        if (playIndex === audioInfo.playIndex) {\n          return;\n        }\n\n        this.props.setPlayIndex(audioInfo.playIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\n;\nexport default MusicPlayer; // onAudioPlay={(audioInfo) => {\n// \tif (playIndex === audioInfo.playIndex) {\n// \t\treturn;\n// \t}\n// \tsetPlayIndex(audioInfo.playIndex);\n// }}\n// class App extends React.Component{\n//     constructor() {\n//     this.audioInstance = null\n//     }\n//     render() {\n//     return (\n//         <>\n//         <ReactJkMusicPlayer getAudioInstance={instance => this.audioInstance = instance}/>\n//         <button onClick={() => this.audioInstance.play()}>play</button>\n//         <button onClick={() => this.audioInstance.pause()}>pause</button>\n//         <button onClick={() => this.audioInstance.load()}>reload</button>\n//         <button onClick={() => (this.audioInstance.currentTime = 40)}>\n//             change current play time\n//         </button>\n//         <button onClick={() => (this.audioInstance.playbackRate = 2)}>\n//             change play back rate\n//         </button>\n//         <button onClick={() => (this.audioInstance.volume = 0.2)}>change volume</button>\n//         <button onClick={() => this.audioInstance.destroy()}>destroy player</button>\n//         </>\n//     )\n//     }\n// }","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/beranda-musics/musicPlayer.js"],"names":["React","Component","ReactJkMusicPlayer","MusicPlayer","render","musicas","Object","values","props","music","playlist","map","X","name","title","singer","Artist","cover","thumbnail","musicSrc","attach","height","width","playIndex","audioInfo","setPlayIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAmC;AAC/B;AACH;AAEAG,EAAAA,MAAM,GACN;AAAE,UAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKC,KAAL,CAAWC,KAAzB,CAAhB;AACD,UAAMC,QAAQ,GAAGL,OAAO,CAACM,GAAR,CAAaC,CAAD,KAAQ;AACpCC,MAAAA,IAAI,EAAED,CAAC,CAACE,KAD4B;AAEpCC,MAAAA,MAAM,EAAEH,CAAC,CAACI,MAAF,CAASH,IAFmB;AAGpCI,MAAAA,KAAK,EAAG,gCAA+BL,CAAC,CAACM,SAAU,EAHf;AAIpCC,MAAAA,QAAQ,EAAEP,CAAC,CAACQ;AAJwB,KAAR,CAAZ,CAAjB;AAOA,wBACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,kBAAD;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,UAAU,EAAEZ,QAFb;AAGC,MAAA,gBAAgB,EAAE,CAHnB;AAIC,MAAA,QAAQ,EAAE,KAJX;AAKC,MAAA,YAAY,EAAE,KALf;AAMC,MAAA,eAAe,EAAE,KANlB;AAOC,MAAA,UAAU,EAAE,KAPb;AAQC,MAAA,UAAU,EAAE,KARb;AASC,MAAA,OAAO,EAAE,IATV;AAUC,MAAA,SAAS,EAAEa,SAVZ;AAWC,MAAA,WAAW,EAAGC,SAAD,IAAe;AAC5B,YAAID,SAAS,KAAKC,SAAS,CAACD,SAA5B,EAAuC;AACvC;AAAS;;AACP,aAAKf,KAAL,CAAWiB,YAAX,CAAwBD,SAAS,CAACD,SAAlC;AACA,OAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAsBA;;AAnCiC;;AAoClC;AAED,eAAepB,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\r\nimport './musicPlayer.css';\r\n\r\nclass MusicPlayer extends Component{\r\n    // console.log(setPlayIndex)\r\n\t// const [ audioInstance, setPlayIndex ] = useState(null);\r\n\t\r\n\trender()\r\n\t{\tconst musicas = Object.values(this.props.music);\r\n\t\tconst playlist = musicas.map((X) => ({\r\n\t\t\tname: X.title,\r\n\t\t\tsinger: X.Artist.name,\r\n\t\t\tcover: `http://localhost:5000/public/${X.thumbnail}`,\r\n\t\t\tmusicSrc: X.attach\r\n\t\t}));\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div style={{ height: '80px', width: '100%' }}>\r\n\t\t\t\t<ReactJkMusicPlayer\r\n\t\t\t\t\tmode=\"full\"\r\n\t\t\t\t\taudioLists={playlist}\r\n\t\t\t\t\tdefaultPlayIndex={0}\r\n\t\t\t\t\tautoPlay={false}\r\n\t\t\t\t\tshowDownload={false}\r\n\t\t\t\t\tshowThemeSwitch={false}\r\n\t\t\t\t\ttoggleMode={false}\r\n\t\t\t\t\tresponsive={false}\r\n\t\t\t\t\tglassBg={true}\r\n\t\t\t\t\tplayIndex={playIndex}\r\n\t\t\t\t\tonAudioPlay={(audioInfo) => {\r\n\t\t\t\t\tif (playIndex === audioInfo.playIndex) {\r\n\t\t\t\t\treturn; }\r\n\t\t\t\t\t\t\tthis.props.setPlayIndex(audioInfo.playIndex); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t/> \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default MusicPlayer;\r\n\r\n// onAudioPlay={(audioInfo) => {\r\n// \tif (playIndex === audioInfo.playIndex) {\r\n// \t\treturn;\r\n// \t}\r\n// \tsetPlayIndex(audioInfo.playIndex);\r\n// }}\r\n\r\n// class App extends React.Component{\r\n//     constructor() {\r\n//     this.audioInstance = null\r\n//     }\r\n//     render() {\r\n//     return (\r\n//         <>\r\n//         <ReactJkMusicPlayer getAudioInstance={instance => this.audioInstance = instance}/>\r\n//         <button onClick={() => this.audioInstance.play()}>play</button>\r\n//         <button onClick={() => this.audioInstance.pause()}>pause</button>\r\n//         <button onClick={() => this.audioInstance.load()}>reload</button>\r\n//         <button onClick={() => (this.audioInstance.currentTime = 40)}>\r\n//             change current play time\r\n//         </button>\r\n//         <button onClick={() => (this.audioInstance.playbackRate = 2)}>\r\n//             change play back rate\r\n//         </button>\r\n//         <button onClick={() => (this.audioInstance.volume = 0.2)}>change volume</button>\r\n//         <button onClick={() => this.audioInstance.destroy()}>destroy player</button>\r\n//         </>\r\n//     )\r\n//     }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}