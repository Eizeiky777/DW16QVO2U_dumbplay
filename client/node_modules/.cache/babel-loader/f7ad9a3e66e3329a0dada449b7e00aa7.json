{"ast":null,"code":"import { TRANSACTION } from \"../constants/action-types\";\nimport { API, setAuthToken } from \"../config/api\";\nimport moment from 'moment';\nexport const postTransaction = (file, idUser) => {\n  return {\n    type: TRANSACTION,\n    payload: async () => {\n      try {\n        setAuthToken(localStorage.getItem(\"token\"));\n        const formData = new FormData(); // var currentDate = moment('2015-10-30');\n        // var futureMonth = moment(currentDate).add(1, 'M');\n        // var futureMonthEnd = moment(futureMonth).endOf('month');\n        // if(currentDate.date() != futureMonth.date() && futureMonth.isSame(futureMonthEnd.format('YYYY-MM-DD'))) {\n        //     futureMonth = futureMonth.add(1, 'd');\n        // }\n\n        formData.append(\"startDate\", moment());\n        formData.append(\"dueDate\", moment());\n        formData.append(\"userId\", idUser);\n        formData.append(\"attache\", file);\n        formData.append(\"status\", \"Pending\");\n        const config = {\n          headers: {\n            \"content-type\": \"multipart/form-data\"\n          }\n        };\n        const {\n          data: {\n            data\n          }\n        } = await API.post(\"/transaction/add\", formData, config);\n        return data;\n      } catch (error) {\n        if (error.response) {\n          const {\n            data,\n            status\n          } = error.response;\n          if (status > 399) throw data.error;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/redux/actions/transactions.js"],"names":["TRANSACTION","API","setAuthToken","moment","postTransaction","file","idUser","type","payload","localStorage","getItem","formData","FormData","append","config","headers","data","post","error","response","status"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,eAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAEP,WADH;AAEHQ,IAAAA,OAAO,EAAE,YAAY;AACrB,UAAI;AACAN,QAAAA,YAAY,CAAEO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAF,CAAZ;AAEA,cAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAHA,CAKA;AACA;AACA;AAEA;AACA;AACA;;AAEAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BV,MAAM,EAAnC;AACAQ,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BV,MAAM,EAAjC;AACAQ,QAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BP,MAA1B;AACAK,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BR,IAA3B;AACAM,QAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,SAA1B;AAEA,cAAMC,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADE,SAAf;AAMA,cAAM;AACNC,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF;AADA,YAEF,MAAMf,GAAG,CAACgB,IAAJ,CAAS,kBAAT,EAA6BN,QAA7B,EAAuCG,MAAvC,CAFV;AAIA,eAAOE,IAAP;AACH,OA9BD,CA8BE,OAAOE,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACC,QAAV,EAAoB;AACpB,gBAAM;AAAEH,YAAAA,IAAF;AAAQI,YAAAA;AAAR,cAAmBF,KAAK,CAACC,QAA/B;AAEA,cAAIC,MAAM,GAAG,GAAb,EAAkB,MAAMJ,IAAI,CAACE,KAAX;AACjB;AACJ;AACA;AAxCE,GAAP;AA0CH,CA3CM","sourcesContent":["import { TRANSACTION } from \"../constants/action-types\";\r\nimport { API, setAuthToken } from \"../config/api\";\r\nimport moment from 'moment';\r\n\r\nexport const postTransaction = (file, idUser) => {\r\n    return {\r\n        type: TRANSACTION,\r\n        payload: async () => {\r\n        try {\r\n            setAuthToken( localStorage.getItem(\"token\") );\r\n\r\n            const formData = new FormData();\r\n\r\n            // var currentDate = moment('2015-10-30');\r\n            // var futureMonth = moment(currentDate).add(1, 'M');\r\n            // var futureMonthEnd = moment(futureMonth).endOf('month');\r\n\r\n            // if(currentDate.date() != futureMonth.date() && futureMonth.isSame(futureMonthEnd.format('YYYY-MM-DD'))) {\r\n            //     futureMonth = futureMonth.add(1, 'd');\r\n            // }\r\n\r\n            formData.append(\"startDate\", moment());\r\n            formData.append(\"dueDate\", moment());\r\n            formData.append(\"userId\", idUser);\r\n            formData.append(\"attache\", file);\r\n            formData.append(\"status\", \"Pending\");\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n            };\r\n            \r\n            const {\r\n            data: { data },\r\n            } = await API.post(\"/transaction/add\", formData, config);\r\n                \r\n            return data;\r\n        } catch (error) {\r\n            if (error.response) {\r\n            const { data, status } = error.response;\r\n\r\n            if (status > 399) throw data.error;\r\n            }\r\n        }\r\n        },\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}