{"ast":null,"code":"import { ADDARTIST } from \"../constants/action-types\";\nimport { API, setAuthToken } from \"../config/api\"; // import moment from 'moment';\n//title, file, year, categoryId, description, titleEpisode, fileEpisode, linkEpisode\n\nexport const addArtist = (film, episode) => {\n  return {\n    type: ADDARTIST,\n    payload: async () => {\n      try {\n        setAuthToken(localStorage.getItem(\"token\"));\n        const {\n          title,\n          fileFilm,\n          year,\n          categoryId,\n          description\n        } = film;\n        const {\n          titleEpisode,\n          fileEpisode,\n          linkEpisode\n        } = episode;\n        let cat = categoryId === \"Tv Show\" ? \"1\" : \"2\";\n        const formData = new FormData();\n        formData.append(\"title\", title);\n        formData.append(\"thumbnailFilm\", fileFilm);\n        formData.append(\"year\", year);\n        formData.append(\"categoryId\", cat);\n        formData.append(\"description\", description);\n        const config = {\n          headers: {\n            \"content-type\": \"multipart/form-data\"\n          }\n        };\n        const {\n          data: {\n            data\n          }\n        } = await API.post(\"/films/add\", formData, config);\n        const ids = data.id; // console.log(ids)\n\n        const formDataEpisode = new FormData();\n        formDataEpisode.append(\"title\", titleEpisode);\n        formDataEpisode.append(\"thumbnailFilm\", fileEpisode);\n        formDataEpisode.append(\"linkFilm\", linkEpisode);\n        formDataEpisode.append(\"filmId\", ids);\n        const {\n          data: {\n            data: dataEpisode\n          }\n        } = await API.post(\"/episodes/add\", formDataEpisode, config);\n        return dataEpisode;\n      } catch (error) {\n        if (error.response) {\n          const {\n            data,\n            status\n          } = error.response;\n          if (status > 399) throw data.error;\n        }\n      }\n    }\n  };\n}; // export const postEpisodeArtist = ( dataAddEpisode, id ) => {\n//     return {\n//         type: ADDEPISODETVMOVIE,\n//         payload: async () => {\n//         try {\n//             setAuthToken( localStorage.getItem(\"token\") );\n//             const { titleEpisode, fileEpisode, linkEpisode  } = dataAddEpisode;\n//             const formDataEpisode = new FormData();\n//             formDataEpisode.append(\"title\", titleEpisode);\n//             formDataEpisode.append(\"thumbnailFilm\", fileEpisode);\n//             formDataEpisode.append(\"linkFilm\", linkEpisode);\n//             formDataEpisode.append(\"filmId\", id);\n//             const config = {\n//                 headers: {\n//                     \"content-type\": \"multipart/form-data\",\n//                 },\n//             };\n//             const {\n//             data: { data: dataEpisode },\n//             } = await API.post(\"/episodes/add\", formDataEpisode, config);\n//             return dataEpisode;\n//         } catch (error) {\n//             if (error.response) {\n//             const { data, status } = error.response;\n//             if (status > 399) throw data.error;\n//             }\n//         }\n//         },\n//     };\n// };","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/redux/actions/artists.js"],"names":["ADDARTIST","API","setAuthToken","addArtist","film","episode","type","payload","localStorage","getItem","title","fileFilm","year","categoryId","description","titleEpisode","fileEpisode","linkEpisode","cat","formData","FormData","append","config","headers","data","post","ids","id","formDataEpisode","dataEpisode","error","response","status"],"mappings":"AAAA,SAASA,SAAT,QAA0B,2BAA1B;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,eAAlC,C,CACA;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAAEC,IAAF,EAAQC,OAAR,KAAqB;AAC1C,SAAO;AACHC,IAAAA,IAAI,EAAEN,SADH;AAEHO,IAAAA,OAAO,EAAE,YAAY;AACrB,UAAI;AACAL,QAAAA,YAAY,CAAEM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAF,CAAZ;AAEA,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA,QAAT;AAAmBC,UAAAA,IAAnB;AAAyBC,UAAAA,UAAzB;AAAqCC,UAAAA;AAArC,YAAqDV,IAA3D;AACA,cAAM;AAAEW,UAAAA,YAAF;AAAgBC,UAAAA,WAAhB;AAA6BC,UAAAA;AAA7B,YAA8CZ,OAApD;AACA,YAAIa,GAAG,GAAGL,UAAU,KAAK,SAAf,GAA2B,GAA3B,GAAiC,GAA3C;AAEA,cAAMM,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBX,KAAzB;AACAS,QAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCV,QAAjC;AACAQ,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBT,IAAxB;AACAO,QAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BH,GAA9B;AACAC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BP,WAA/B;AAEA,cAAMQ,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADE,SAAf;AAMA,cAAM;AACNC,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF;AADA,YAEF,MAAMvB,GAAG,CAACwB,IAAJ,CAAS,YAAT,EAAuBN,QAAvB,EAAiCG,MAAjC,CAFV;AAIA,cAAMI,GAAG,GAAGF,IAAI,CAACG,EAAjB,CAzBA,CA0BA;;AAEA,cAAMC,eAAe,GAAG,IAAIR,QAAJ,EAAxB;AACAQ,QAAAA,eAAe,CAACP,MAAhB,CAAuB,OAAvB,EAAgCN,YAAhC;AACAa,QAAAA,eAAe,CAACP,MAAhB,CAAuB,eAAvB,EAAwCL,WAAxC;AACAY,QAAAA,eAAe,CAACP,MAAhB,CAAuB,UAAvB,EAAmCJ,WAAnC;AACAW,QAAAA,eAAe,CAACP,MAAhB,CAAuB,QAAvB,EAAiCK,GAAjC;AAEA,cAAM;AACNF,UAAAA,IAAI,EAAE;AAAEA,YAAAA,IAAI,EAAEK;AAAR;AADA,YAEF,MAAM5B,GAAG,CAACwB,IAAJ,CAAS,eAAT,EAA0BG,eAA1B,EAA2CN,MAA3C,CAFV;AAIA,eAAOO,WAAP;AACH,OAvCD,CAuCE,OAAOC,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACC,QAAV,EAAoB;AACpB,gBAAM;AAAEP,YAAAA,IAAF;AAAQQ,YAAAA;AAAR,cAAmBF,KAAK,CAACC,QAA/B;AAEA,cAAIC,MAAM,GAAG,GAAb,EAAkB,MAAMR,IAAI,CAACM,KAAX;AACjB;AACJ;AACA;AAjDE,GAAP;AAmDH,CApDM,C,CAsDP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ADDARTIST } from \"../constants/action-types\";\r\nimport { API, setAuthToken } from \"../config/api\";\r\n// import moment from 'moment';\r\n\r\n//title, file, year, categoryId, description, titleEpisode, fileEpisode, linkEpisode\r\nexport const addArtist = ( film, episode ) => {\r\n    return {\r\n        type: ADDARTIST,\r\n        payload: async () => {\r\n        try {\r\n            setAuthToken( localStorage.getItem(\"token\") );\r\n\r\n            const { title, fileFilm, year, categoryId, description } = film;\r\n            const { titleEpisode, fileEpisode, linkEpisode  } = episode;\r\n            let cat = categoryId === \"Tv Show\" ? \"1\" : \"2\";\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"title\", title);\r\n            formData.append(\"thumbnailFilm\", fileFilm);\r\n            formData.append(\"year\", year);\r\n            formData.append(\"categoryId\", cat);\r\n            formData.append(\"description\", description);\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n            };\r\n            \r\n            const {\r\n            data: { data },\r\n            } = await API.post(\"/films/add\", formData, config);\r\n\r\n            const ids = data.id;\r\n            // console.log(ids)\r\n\r\n            const formDataEpisode = new FormData();\r\n            formDataEpisode.append(\"title\", titleEpisode);\r\n            formDataEpisode.append(\"thumbnailFilm\", fileEpisode);\r\n            formDataEpisode.append(\"linkFilm\", linkEpisode);\r\n            formDataEpisode.append(\"filmId\", ids);\r\n\r\n            const {\r\n            data: { data: dataEpisode },\r\n            } = await API.post(\"/episodes/add\", formDataEpisode, config);\r\n            \r\n            return dataEpisode;\r\n        } catch (error) {\r\n            if (error.response) {\r\n            const { data, status } = error.response;\r\n\r\n            if (status > 399) throw data.error;\r\n            }\r\n        }\r\n        },\r\n    };\r\n};\r\n\r\n// export const postEpisodeArtist = ( dataAddEpisode, id ) => {\r\n//     return {\r\n//         type: ADDEPISODETVMOVIE,\r\n//         payload: async () => {\r\n//         try {\r\n//             setAuthToken( localStorage.getItem(\"token\") );\r\n\r\n//             const { titleEpisode, fileEpisode, linkEpisode  } = dataAddEpisode;\r\n\r\n//             const formDataEpisode = new FormData();\r\n//             formDataEpisode.append(\"title\", titleEpisode);\r\n//             formDataEpisode.append(\"thumbnailFilm\", fileEpisode);\r\n//             formDataEpisode.append(\"linkFilm\", linkEpisode);\r\n//             formDataEpisode.append(\"filmId\", id);\r\n\r\n//             const config = {\r\n//                 headers: {\r\n//                     \"content-type\": \"multipart/form-data\",\r\n//                 },\r\n//             };\r\n\r\n//             const {\r\n//             data: { data: dataEpisode },\r\n//             } = await API.post(\"/episodes/add\", formDataEpisode, config);\r\n            \r\n//             return dataEpisode;\r\n//         } catch (error) {\r\n//             if (error.response) {\r\n//             const { data, status } = error.response;\r\n\r\n//             if (status > 399) throw data.error;\r\n//             }\r\n//         }\r\n//         },\r\n//     };\r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}