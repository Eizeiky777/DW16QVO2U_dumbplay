{"ast":null,"code":"import { REGISTER, LOGIN } from \"../../constants/action-types\";\nimport { API, setAuthToken } from \"../../config/api\"; // import axios from \"axios\";\n// // Set config defaults when creating the instance\n// export const API = axios.create({\n//   baseURL: \"http://localhost:5000/api/v1\",\n// });\n// // Alter defaults after instance has been created\n// export const setAuthToken = (token) => {\n//   API.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n// };\n\nexport const register = user => {\n  return {\n    type: REGISTER,\n    payload: async () => {\n      try {\n        const {\n          data: {\n            data\n          }\n        } = await API.post(\"/register\", user);\n        localStorage.setItem(\"token\", data.token);\n        setAuthToken(data.token); //Set header token\n\n        const {\n          data: {\n            data: dataUser\n          }\n        } = await API.get(\"/user\");\n        return dataUser;\n      } catch (error) {\n        if (error.response) {\n          const {\n            data,\n            status\n          } = error.response;\n          if (status > 399) throw data.error;\n        }\n      }\n    }\n  };\n};\nexport const login = user => {\n  return {\n    type: LOGIN,\n    payload: async () => {\n      try {\n        const {\n          data: {\n            data\n          }\n        } = await API.post(\"/login\", user);\n        localStorage.setItem(\"token\", data.token);\n        setAuthToken(data.token); //Set header token\n\n        const {\n          data: {\n            data: dataUser\n          }\n        } = await API.get(\"/user\");\n        return dataUser;\n      } catch (error) {\n        if (error.response) {\n          const {\n            data,\n            status\n          } = error.response;\n          if (status > 399) throw data.error;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_1/dumbflix_ORM/src/components/redux/actions/auth.js"],"names":["REGISTER","LOGIN","API","setAuthToken","register","user","type","payload","data","post","localStorage","setItem","token","dataUser","get","error","response","status","login"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,8BAAhC;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,kBAAlC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEN,QADD;AAELO,IAAAA,OAAO,EAAE,YAAY;AACnB,UAAI;AACF,cAAM;AACJC,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF;AADF,YAEF,MAAMN,GAAG,CAACO,IAAJ,CAAS,WAAT,EAAsBJ,IAAtB,CAFV;AAIAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAT,QAAAA,YAAY,CAACK,IAAI,CAACI,KAAN,CAAZ,CANE,CAMwB;;AAE1B,cAAM;AACJJ,UAAAA,IAAI,EAAE;AAAEA,YAAAA,IAAI,EAAEK;AAAR;AADF,YAEF,MAAMX,GAAG,CAACY,GAAJ,CAAQ,OAAR,CAFV;AAGA,eAAOD,QAAP;AACD,OAZD,CAYE,OAAOE,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,gBAAM;AAAER,YAAAA,IAAF;AAAQS,YAAAA;AAAR,cAAmBF,KAAK,CAACC,QAA/B;AAEA,cAAIC,MAAM,GAAG,GAAb,EAAkB,MAAMT,IAAI,CAACO,KAAX;AACnB;AACF;AACF;AAtBI,GAAP;AAwBD,CAzBM;AA2BP,OAAO,MAAMG,KAAK,GAAIb,IAAD,IAAU;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEL,KADD;AAELM,IAAAA,OAAO,EAAE,YAAY;AACnB,UAAI;AACF,cAAM;AACJC,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF;AADF,YAEF,MAAMN,GAAG,CAACO,IAAJ,CAAS,QAAT,EAAmBJ,IAAnB,CAFV;AAIAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAT,QAAAA,YAAY,CAACK,IAAI,CAACI,KAAN,CAAZ,CANE,CAMwB;;AAE1B,cAAM;AACJJ,UAAAA,IAAI,EAAE;AAAEA,YAAAA,IAAI,EAAEK;AAAR;AADF,YAEF,MAAMX,GAAG,CAACY,GAAJ,CAAQ,OAAR,CAFV;AAGA,eAAOD,QAAP;AACD,OAZD,CAYE,OAAOE,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,gBAAM;AAAER,YAAAA,IAAF;AAAQS,YAAAA;AAAR,cAAmBF,KAAK,CAACC,QAA/B;AAEA,cAAIC,MAAM,GAAG,GAAb,EAAkB,MAAMT,IAAI,CAACO,KAAX;AACnB;AACF;AACF;AAtBI,GAAP;AAwBD,CAzBM","sourcesContent":["import { REGISTER, LOGIN } from \"../../constants/action-types\";\nimport { API, setAuthToken } from \"../../config/api\";\n\n// import axios from \"axios\";\n// // Set config defaults when creating the instance\n// export const API = axios.create({\n//   baseURL: \"http://localhost:5000/api/v1\",\n// });\n// // Alter defaults after instance has been created\n// export const setAuthToken = (token) => {\n//   API.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n// };\n\nexport const register = (user) => {\n  return {\n    type: REGISTER,\n    payload: async () => {\n      try {\n        const {\n          data: { data },\n        } = await API.post(\"/register\", user);\n\n        localStorage.setItem(\"token\", data.token);\n        setAuthToken(data.token); //Set header token\n\n        const {\n          data: { data: dataUser },\n        } = await API.get(\"/user\");\n        return dataUser;\n      } catch (error) {\n        if (error.response) {\n          const { data, status } = error.response;\n\n          if (status > 399) throw data.error;\n        }\n      }\n    },\n  };\n};\n\nexport const login = (user) => {\n  return {\n    type: LOGIN,\n    payload: async () => {\n      try {\n        const {\n          data: { data },\n        } = await API.post(\"/login\", user);\n\n        localStorage.setItem(\"token\", data.token);\n        setAuthToken(data.token); //Set header token\n\n        const {\n          data: { data: dataUser },\n        } = await API.get(\"/user\");\n        return dataUser;\n      } catch (error) {\n        if (error.response) {\n          const { data, status } = error.response;\n\n          if (status > 399) throw data.error;\n        }\n      }\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}