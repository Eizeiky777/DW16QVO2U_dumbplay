{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_4 - Presentasi Final test\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Jumbotron from './components/beranda/jumbotron';\nimport MusicList from './components/beranda-musics/musicList';\nimport MusicListGuest from './components/beranda/musiclist';\nimport MusicPlayer from './components/beranda-musics/musicPlayer';\nimport { connect } from \"react-redux\";\nimport { getMusics } from \"./components/redux/actions/musics\"; // import { getLoginDetail } from \"./components/redux/actions/loginDetail\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.setPlayIndex = e => {\n      this.setState({\n        playIndex: e\n      });\n    };\n\n    this.getAudioInstance = instance => {\n      //console.log(\"Getting audio instance\", instance);\n      this.audioInstance = instance;\n    };\n\n    this.onPlayHandler = () => this.play = true;\n\n    this.onPauseHandler = () => this.play = false;\n\n    this.state = {\n      playIndex: 0\n    };\n    this.audioInstance = null;\n    this.play = true;\n  }\n\n  componentDidMount() {\n    this.props.getMusics(); // this.props.getLoginDetail()\n    //console.log(\"Updated audio instance\", this.audioInstance);\n  }\n\n  render() {\n    // const { data: dataUser, loading, error } = this.props.auth;\n    let {\n      open\n    } = this.props;\n    const {\n      data: listMusic\n    } = this.props.music; // const { data: dataLogger } = this.props.loginDetail;\n    // if (!(Object.keys(dataLogger).length === 0 && dataLogger.constructor === Object)){\n    //     // console.log(dataLogger)\n    // }\n    // const statusLogger = Object.values(dataLogger);\n    // console.log(statusLogger)\n    // let subscribe = statusLogger[7] === true ? true : false;\n    // // console.log(subscribe, 'user')\n    // let roles = localStorage.getItem('role') === 'admin' ? true : false;\n    // // console.log(roles, 'admin')\n    // if(  roles || subscribe ){\n    //   open = true;\n    //   console.log(open, 'hello sir welcome to our service')\n    // }else{\n    //   open = false;\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      ids: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), open ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MusicList, {\n      music: listMusic,\n      setPlayIndex: this.setPlayIndex,\n      playIndex: this.state.playIndex,\n      audioInstance: this.audioInstance,\n      play: this.play,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MusicPlayer, {\n      music: listMusic,\n      setPlayIndex: this.setPlayIndex,\n      playIndex: this.state.playIndex,\n      getAudioInstance: this.getAudioInstance,\n      onPlayHandler: this.onPlayHandler,\n      onPauseHandler: this.onPauseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(MusicListGuest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    music: state.music\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMusics\n})(App); // note\n// pay ,  getAudioInstance, onPlayHandler, onPauseHandler,","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/App.js"],"names":["React","Component","Jumbotron","MusicList","MusicListGuest","MusicPlayer","connect","getMusics","App","constructor","setPlayIndex","e","setState","playIndex","getAudioInstance","instance","audioInstance","onPlayHandler","play","onPauseHandler","state","componentDidMount","props","render","open","data","listMusic","music","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,mCAA1B,C,CACA;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAE1BQ,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,YATa,GASGC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF;AAAZ,OAAd;AACD,KAXY;;AAAA,SAabG,gBAba,GAaOC,QAAD,IAAc;AAC/B;AACA,WAAKC,aAAL,GAAqBD,QAArB;AACD,KAhBY;;AAAA,SAkBbE,aAlBa,GAkBG,MAAM,KAAKC,IAAL,GAAY,IAlBrB;;AAAA,SAmBbC,cAnBa,GAmBI,MAAM,KAAKD,IAAL,GAAY,KAnBtB;;AAEX,SAAKE,KAAL,GAAa;AACTP,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKG,aAAL,GAAqB,IAArB;AACA,SAAKE,IAAL,GAAY,IAAZ;AACH;;AAcCG,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWf,SAAX,GADiB,CAEjB;AACA;AACH;;AAECgB,EAAAA,MAAM,GAAE;AACN;AACA,QAAI;AAAEC,MAAAA;AAAF,QAAW,KAAKF,KAApB;AACA,UAAM;AAAEG,MAAAA,IAAI,EAAEC;AAAR,QAAsB,KAAKJ,KAAL,CAAWK,KAAvC,CAHM,CAIN;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAMIH,IAAI,gBACF,uDACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,SAAlB;AACE,MAAA,YAAY,EAAE,KAAKhB,YADrB;AAEE,MAAA,SAAS,EAAE,KAAKU,KAAL,CAAWP,SAFxB;AAGE,MAAA,aAAa,EAAE,KAAKG,aAHtB;AAIE,MAAA,IAAI,EAAE,KAAKE,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEQ,SADT;AAEE,MAAA,YAAY,EAAE,KAAKhB,YAFrB;AAGE,MAAA,SAAS,EAAE,KAAKU,KAAL,CAAWP,SAHxB;AAIE,MAAA,gBAAgB,EAAE,KAAKC,gBAJzB;AAKE,MAAA,aAAa,EAAE,KAAKG,aALtB;AAME,MAAA,cAAc,EAAE,KAAKE,cANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADE,gBAmBH,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBL,CADF;AA+BD;;AApFyB;;AAwF5B,MAAMS,eAAe,GAAIR,KAAD,IAAW;AACjC,SAAO;AACHO,IAAAA,KAAK,EAAEP,KAAK,CAACO;AADV,GAAP;AAGD,CAJD;;AAMA,eAAerB,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,GAAxC,CAAf,C,CAGA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport Jumbotron from './components/beranda/jumbotron';\nimport MusicList from './components/beranda-musics/musicList';\nimport MusicListGuest from './components/beranda/musiclist';\nimport MusicPlayer from './components/beranda-musics/musicPlayer';\n\nimport { connect } from \"react-redux\";\nimport { getMusics } from \"./components/redux/actions/musics\";\n// import { getLoginDetail } from \"./components/redux/actions/loginDetail\";\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n        playIndex: 0\n    }\n    this.audioInstance = null\n    this.play = true\n}\n\n  setPlayIndex = (e) => {\n    this.setState({playIndex: e})\n  }\n\n  getAudioInstance = (instance) => {\n    //console.log(\"Getting audio instance\", instance);\n    this.audioInstance = instance;\n  };\n\n  onPlayHandler = () => this.play = true;\n  onPauseHandler = () => this.play = false;\n\n  componentDidMount(){\n    this.props.getMusics()\n    // this.props.getLoginDetail()\n    //console.log(\"Updated audio instance\", this.audioInstance);\n}\n\n  render(){\n    // const { data: dataUser, loading, error } = this.props.auth;\n    let { open } = this.props;\n    const { data: listMusic } = this.props.music;\n    // const { data: dataLogger } = this.props.loginDetail;\n    // if (!(Object.keys(dataLogger).length === 0 && dataLogger.constructor === Object)){\n    //     // console.log(dataLogger)\n    // }\n\n    // const statusLogger = Object.values(dataLogger);\n    // console.log(statusLogger)\n    // let subscribe = statusLogger[7] === true ? true : false;\n    // // console.log(subscribe, 'user')\n    // let roles = localStorage.getItem('role') === 'admin' ? true : false;\n    // // console.log(roles, 'admin')\n\n    // if(  roles || subscribe ){\n    //   open = true;\n    //   console.log(open, 'hello sir welcome to our service')\n    // }else{\n    //   open = false;\n    // }\n\n\n    return (\n      <div>\n      \n      {\n          <Jumbotron ids={1} />\n      }\n      {\n          open ? \n          ( <>\n              <MusicList music={listMusic} \n                setPlayIndex={this.setPlayIndex} \n                playIndex={this.state.playIndex} \n                audioInstance={this.audioInstance} \n                play={this.play}\n              />\n\n              <MusicPlayer \n                music={listMusic} \n                setPlayIndex={this.setPlayIndex} \n                playIndex={this.state.playIndex} \n                getAudioInstance={this.getAudioInstance}\n                onPlayHandler={this.onPlayHandler}\n                onPauseHandler={this.onPauseHandler}\n              />\n            </>\n          ) : \n          (<MusicListGuest />   )\n      }\n\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n      music: state.music\n  };\n};\n\nexport default connect(mapStateToProps, { getMusics })(App);\n\n\n// note\n// pay ,  getAudioInstance, onPlayHandler, onPauseHandler, "]},"metadata":{},"sourceType":"module"}