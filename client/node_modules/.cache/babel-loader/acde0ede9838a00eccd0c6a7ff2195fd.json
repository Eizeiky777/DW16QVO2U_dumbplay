{"ast":null,"code":"import { MUSICS, ADDMUSICS } from \"../constants/action-types\";\nimport { API, setAuthToken } from \"../config/api\";\nexport const getMusics = () => {\n  return {\n    type: MUSICS,\n    payload: async () => {\n      try {\n        const {\n          data: {\n            data\n          }\n        } = await API.get(\"/musics\");\n        return data;\n      } catch (error) {\n        if (error.response) {\n          const {\n            data,\n            status\n          } = error.response;\n          if (status > 399) throw data.error;\n        }\n      }\n    }\n  };\n};\nexport const addMusics = e => {\n  return {\n    type: ADDMUSICS,\n    payload: async () => {\n      try {\n        setAuthToken(localStorage.getItem(\"token\"));\n        const {\n          title,\n          thumbnail,\n          year,\n          artistId,\n          attach\n        } = e;\n        const formData = new FormData();\n        formData.append(\"title\", title);\n        formData.append(\"year\", year);\n        formData.append(\"thumbmnail\", thumbnail);\n        formData.append(\"attach\", attach);\n        formData.append(\"artistId\", artistId);\n        console.log(e);\n        const config = {\n          headers: {\n            \"content-type\": \"multipart/form-data\"\n          }\n        };\n        const {\n          data: {\n            data\n          }\n        } = await API.post(\"/music/add\", formData, config);\n        return data;\n      } catch (error) {\n        if (error.response) {\n          const {\n            data,\n            status\n          } = error.response;\n          if (status > 399) throw data.error;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/redux/actions/musics.js"],"names":["MUSICS","ADDMUSICS","API","setAuthToken","getMusics","type","payload","data","get","error","response","status","addMusics","e","localStorage","getItem","title","thumbnail","year","artistId","attach","formData","FormData","append","console","log","config","headers","post"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,2BAAlC;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,eAAlC;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEL,MADH;AAEHM,IAAAA,OAAO,EAAE,YAAY;AACrB,UAAI;AACA,cAAM;AACNC,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF;AADA,YAEF,MAAML,GAAG,CAACM,GAAJ,CAAQ,SAAR,CAFV;AAIA,eAAOD,IAAP;AACH,OAND,CAME,OAAOE,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACC,QAAV,EAAoB;AACpB,gBAAM;AAAEH,YAAAA,IAAF;AAAQI,YAAAA;AAAR,cAAmBF,KAAK,CAACC,QAA/B;AAEA,cAAIC,MAAM,GAAG,GAAb,EAAkB,MAAMJ,IAAI,CAACE,KAAX;AACjB;AACJ;AACA;AAhBE,GAAP;AAkBH,CAnBM;AAqBP,OAAO,MAAMG,SAAS,GAAIC,CAAD,IAAO;AAC5B,SAAO;AACHR,IAAAA,IAAI,EAAEJ,SADH;AAEHK,IAAAA,OAAO,EAAE,YAAY;AACrB,UAAI;AACAH,QAAAA,YAAY,CAAEW,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAF,CAAZ;AACA,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA,SAAT;AAAoBC,UAAAA,IAApB;AAA0BC,UAAAA,QAA1B;AAAoCC,UAAAA;AAApC,YAA+CP,CAArD;AAEA,cAAMQ,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBP,KAAzB;AACAK,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AACAG,QAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA6BN,SAA7B;AACAI,QAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,MAA1B;AACAC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,QAA5B;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AAEA,cAAMa,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADE,SAAf;AAMA,cAAM;AACNpB,UAAAA,IAAI,EAAE;AAAEA,YAAAA;AAAF;AADA,YAEF,MAAML,GAAG,CAAC0B,IAAJ,CAAS,YAAT,EAAuBP,QAAvB,EAAiCK,MAAjC,CAFV;AAIA,eAAOnB,IAAP;AACH,OAvBD,CAuBE,OAAOE,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACC,QAAV,EAAoB;AACpB,gBAAM;AAAEH,YAAAA,IAAF;AAAQI,YAAAA;AAAR,cAAmBF,KAAK,CAACC,QAA/B;AAEA,cAAIC,MAAM,GAAG,GAAb,EAAkB,MAAMJ,IAAI,CAACE,KAAX;AACjB;AACJ;AACA;AAjCE,GAAP;AAmCH,CApCM","sourcesContent":["import { MUSICS, ADDMUSICS } from \"../constants/action-types\";\r\nimport { API, setAuthToken } from \"../config/api\";\r\n\r\n\r\nexport const getMusics = () => {\r\n    return {\r\n        type: MUSICS,\r\n        payload: async () => {\r\n        try {\r\n            const {\r\n            data: { data },\r\n            } = await API.get(\"/musics\");\r\n            \r\n            return data;\r\n        } catch (error) {\r\n            if (error.response) {\r\n            const { data, status } = error.response;\r\n\r\n            if (status > 399) throw data.error;\r\n            }\r\n        }\r\n        },\r\n    };\r\n};\r\n\r\nexport const addMusics = (e) => {\r\n    return {\r\n        type: ADDMUSICS,\r\n        payload: async () => {\r\n        try {\r\n            setAuthToken( localStorage.getItem(\"token\") );\r\n            const { title, thumbnail, year, artistId, attach } = e;\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"title\", title);\r\n            formData.append(\"year\", year);\r\n            formData.append(\"thumbmnail\",thumbnail);\r\n            formData.append(\"attach\", attach);\r\n            formData.append(\"artistId\", artistId);\r\n            console.log(e)\r\n            \r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n            };\r\n            \r\n            const {\r\n            data: { data },\r\n            } = await API.post(\"/music/add\", formData, config);\r\n                \r\n            return data;\r\n        } catch (error) {\r\n            if (error.response) {\r\n            const { data, status } = error.response;\r\n\r\n            if (status > 399) throw data.error;\r\n            }\r\n        }\r\n        },\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}