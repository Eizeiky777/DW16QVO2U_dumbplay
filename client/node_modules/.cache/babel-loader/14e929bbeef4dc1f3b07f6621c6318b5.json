{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_4 - Presentasi Final test\\\\client\\\\src\\\\components\\\\beranda-musics\\\\musicPlayer.js\";\nimport React, { useState } from 'react';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport './musicPlayer.css';\n\nconst MusicPlayer = ({\n  music,\n  playIndex,\n  setPlayIndex\n}) => {\n  console.log(setPlayIndex); // const [ audioInstance, setPlayIndex ] = useState(null);\n\n  const musicas = Object.values(music);\n  const playlist = musicas.map(X => ({\n    name: X.title,\n    singer: X.Artist.name,\n    cover: `http://localhost:5000/public/${X.thumbnail}`,\n    musicSrc: X.attach\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ReactJkMusicPlayer, {\n    mode: \"full\",\n    audioLists: playlist,\n    defaultPlayIndex: 0,\n    autoPlay: false,\n    showDownload: false,\n    showThemeSwitch: false,\n    toggleMode: false,\n    responsive: false,\n    glassBg: true,\n    playIndex: playIndex,\n    onAudioPlay: audioInfo => {\n      if (playIndex === audioInfo.playIndex) {\n        return;\n      }\n\n      setPlayIndex(audioInfo.playIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default MusicPlayer; // class App extends React.Component{\n//     constructor() {\n//     this.audioInstance = null\n//     }\n//     render() {\n//     return (\n//         <>\n//         <ReactJkMusicPlayer getAudioInstance={instance => this.audioInstance = instance}/>\n//         <button onClick={() => this.audioInstance.play()}>play</button>\n//         <button onClick={() => this.audioInstance.pause()}>pause</button>\n//         <button onClick={() => this.audioInstance.load()}>reload</button>\n//         <button onClick={() => (this.audioInstance.currentTime = 40)}>\n//             change current play time\n//         </button>\n//         <button onClick={() => (this.audioInstance.playbackRate = 2)}>\n//             change play back rate\n//         </button>\n//         <button onClick={() => (this.audioInstance.volume = 0.2)}>change volume</button>\n//         <button onClick={() => this.audioInstance.destroy()}>destroy player</button>\n//         </>\n//     )\n//     }\n// }","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/beranda-musics/musicPlayer.js"],"names":["React","useState","ReactJkMusicPlayer","MusicPlayer","music","playIndex","setPlayIndex","console","log","musicas","Object","values","playlist","map","X","name","title","singer","Artist","cover","thumbnail","musicSrc","attach","height","width","audioInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAAwC;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EADwD,CAExD;;AACA,QAAMG,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcP,KAAd,CAAhB;AACH,QAAMQ,QAAQ,GAAGH,OAAO,CAACI,GAAR,CAAaC,CAAD,KAAQ;AACpCC,IAAAA,IAAI,EAAED,CAAC,CAACE,KAD4B;AAEpCC,IAAAA,MAAM,EAAEH,CAAC,CAACI,MAAF,CAASH,IAFmB;AAGpCI,IAAAA,KAAK,EAAG,gCAA+BL,CAAC,CAACM,SAAU,EAHf;AAIpCC,IAAAA,QAAQ,EAAEP,CAAC,CAACQ;AAJwB,GAAR,CAAZ,CAAjB;AAQA,sBACC;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,kBAAD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,UAAU,EAAEZ,QAFb;AAGC,IAAA,gBAAgB,EAAE,CAHnB;AAIC,IAAA,QAAQ,EAAE,KAJX;AAKC,IAAA,YAAY,EAAE,KALf;AAMC,IAAA,eAAe,EAAE,KANlB;AAOC,IAAA,UAAU,EAAE,KAPb;AAQC,IAAA,UAAU,EAAE,KARb;AASC,IAAA,OAAO,EAAE,IATV;AAUC,IAAA,SAAS,EAAEP,SAVZ;AAWC,IAAA,WAAW,EAAGoB,SAAD,IAAe;AAC3B,UAAIpB,SAAS,KAAKoB,SAAS,CAACpB,SAA5B,EAAuC;AACtC;AACA;;AACDC,MAAAA,YAAY,CAACmB,SAAS,CAACpB,SAAX,CAAZ;AACA,KAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAsBA,CAlCD;;AAoCA,eAAeF,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\r\nimport './musicPlayer.css';\r\n\r\nconst MusicPlayer = ({ music, playIndex, setPlayIndex }) => {\r\n    console.log(setPlayIndex)\r\n    // const [ audioInstance, setPlayIndex ] = useState(null);\r\n    const musicas = Object.values(music);\r\n\tconst playlist = musicas.map((X) => ({\r\n\t\tname: X.title,\r\n\t\tsinger: X.Artist.name,\r\n\t\tcover: `http://localhost:5000/public/${X.thumbnail}`,\r\n\t\tmusicSrc: X.attach\r\n    }));\r\n    \r\n\r\n\treturn (\r\n\t\t<div style={{ height: '100px', width: '100%' }}>\r\n\t\t\t<ReactJkMusicPlayer\r\n\t\t\t\tmode=\"full\"\r\n\t\t\t\taudioLists={playlist}\r\n\t\t\t\tdefaultPlayIndex={0}\r\n\t\t\t\tautoPlay={false}\r\n\t\t\t\tshowDownload={false}\r\n\t\t\t\tshowThemeSwitch={false}\r\n\t\t\t\ttoggleMode={false}\r\n\t\t\t\tresponsive={false}\r\n\t\t\t\tglassBg={true}\r\n\t\t\t\tplayIndex={playIndex}\r\n\t\t\t\tonAudioPlay={(audioInfo) => {\r\n\t\t\t\t\tif (playIndex === audioInfo.playIndex) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetPlayIndex(audioInfo.playIndex);\r\n\t\t\t\t}}\r\n\t\t\t/> \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MusicPlayer;\r\n\r\n// class App extends React.Component{\r\n//     constructor() {\r\n//     this.audioInstance = null\r\n//     }\r\n//     render() {\r\n//     return (\r\n//         <>\r\n//         <ReactJkMusicPlayer getAudioInstance={instance => this.audioInstance = instance}/>\r\n//         <button onClick={() => this.audioInstance.play()}>play</button>\r\n//         <button onClick={() => this.audioInstance.pause()}>pause</button>\r\n//         <button onClick={() => this.audioInstance.load()}>reload</button>\r\n//         <button onClick={() => (this.audioInstance.currentTime = 40)}>\r\n//             change current play time\r\n//         </button>\r\n//         <button onClick={() => (this.audioInstance.playbackRate = 2)}>\r\n//             change play back rate\r\n//         </button>\r\n//         <button onClick={() => (this.audioInstance.volume = 0.2)}>change volume</button>\r\n//         <button onClick={() => this.audioInstance.destroy()}>destroy player</button>\r\n//         </>\r\n//     )\r\n//     }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}