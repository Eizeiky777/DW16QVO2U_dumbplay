{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_1\\\\dumbflix\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport PrivateRoute from \"./components/private-route/private_route\";\nimport Logged from './components/beranda-login/headerLogin';\nimport ProfileAndPayment from './components/beranda-login/profileAndPayment';\nimport Admin from './components/beranda-admin/main';\nimport Detail from './components/beranda-mdetail/detail';\nimport AddEpisode from './components/beranda-mdetail/x-add_episode';\nimport AddFilm from './components/beranda-admin/x-add_film';\nimport * as serviceWorker from './serviceWorker';\n\nfunction ROUTE() {\n  state = {\n    isLogin: false\n  };\n  const [user, setuUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    role: \"\"\n  });\n  const [modalLogin, setModalLogin] = useState(false);\n  const [modalRegister, setModalRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const showModalLogin = () => {\n    setModalLogin(!modalLogin);\n    setModalRegister(false);\n  };\n\n  const showModalRegister = () => {\n    setModalRegister(!modalRegister);\n    setModalLogin(false);\n  }; // const handleLogout = () => {\n  //   setLogin(false);\n  // };\n\n\n  const userLogin = [{\n    id: 1,\n    name: \"Ekky\",\n    email: \"ekky@gmail.com\",\n    password: \"admin\",\n    role: \"admin\"\n  }, {\n    id: 2,\n    name: \"User\",\n    email: \"user@gmail.com\",\n    password: \"user\",\n    role: \"user\"\n  }];\n\n  const handleLogin = payload => {\n    console.log(payload);\n    const isValid = userLogin.filter(user => user.email == payload.email && user.password == payload.password);\n\n    if (isValid.length) {\n      this.setState({\n        isLogin: true\n      });\n      console.log(this.state.isLogin);\n      setModalLogin(false);\n    } else {\n      setError(\"invalid email and password\");\n      console.log(\"invalid email and password\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/logged\",\n    component: Logged,\n    isLogin: this.state.isLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/logpay/:type\",\n    component: ProfileAndPayment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/admin/:user\",\n    component: Admin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/detail/:id/:genre/:status\",\n    component: Detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/add_episode/:id/:genre/:status\",\n    component: AddEpisode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/add_film/:status/:id\",\n    component: AddFilm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }))));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(ROUTE, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 17\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_1/dumbflix/src/index.js"],"names":["React","useState","ReactDOM","BrowserRouter","Router","Route","Switch","App","PrivateRoute","Logged","ProfileAndPayment","Admin","Detail","AddEpisode","AddFilm","serviceWorker","ROUTE","state","isLogin","user","setuUser","id","name","email","role","modalLogin","setModalLogin","modalRegister","setModalRegister","error","setError","showModalLogin","showModalRegister","userLogin","password","handleLogin","payload","console","log","isValid","filter","length","setState","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport App from './App';\nimport PrivateRoute from \"./components/private-route/private_route\";\n\nimport Logged from './components/beranda-login/headerLogin';\n\nimport ProfileAndPayment from './components/beranda-login/profileAndPayment';\nimport Admin from './components/beranda-admin/main';\n\nimport Detail from './components/beranda-mdetail/detail';\nimport AddEpisode from './components/beranda-mdetail/x-add_episode';\nimport AddFilm from './components/beranda-admin/x-add_film';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\nfunction ROUTE() {\n  state = ({ isLogin: false});\n\n  const [user, setuUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    role: \"\",\n  });\n\n  const [modalLogin, setModalLogin] = useState(false);\n  const [modalRegister, setModalRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const showModalLogin = () => {\n    setModalLogin(!modalLogin);\n    setModalRegister(false);\n  };\n\n  const showModalRegister = () => {\n    setModalRegister(!modalRegister);\n    setModalLogin(false);\n  };\n\n  // const handleLogout = () => {\n  //   setLogin(false);\n  // };\n\n  const userLogin = [\n    {\n      id: 1,\n      name: \"Ekky\",\n      email: \"ekky@gmail.com\",\n      password: \"admin\",\n      role: \"admin\",\n    },\n    {\n      id: 2,\n      name: \"User\",\n      email: \"user@gmail.com\",\n      password: \"user\",\n      role: \"user\",\n    },\n  ];\n\n\n  const handleLogin = (payload) => {\n  \n    console.log(payload);\n    const isValid = userLogin.filter(\n      (user) => user.email == payload.email && user.password == payload.password\n    );\n\n    if (isValid.length) {\n      this.setState({isLogin: true});\n      console.log(this.state.isLogin);\n      setModalLogin(false);\n    } else {\n      setError(\"invalid email and password\");\n      console.log(\"invalid email and password\");\n    }\n  };\n\n  return (\n    <div>\n      <Router>\n        <App handleLogin={handleLogin}/>\n        <Switch>\n\n          <PrivateRoute exact path=\"/logged\" component={Logged} isLogin={this.state.isLogin}  /> \n\n          <Route path=\"/logpay/:type\" component={ProfileAndPayment} />\n          <Route path=\"/admin/:user\" component={Admin} />\n          <Route path=\"/detail/:id/:genre/:status\" component={Detail} />\n          <Route path=\"/add_episode/:id/:genre/:status\" component={AddEpisode} />\n          <Route path=\"/add_film/:status/:id\" component={AddFilm} />\n\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nReactDOM.render(<ROUTE />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"]},"metadata":{},"sourceType":"module"}