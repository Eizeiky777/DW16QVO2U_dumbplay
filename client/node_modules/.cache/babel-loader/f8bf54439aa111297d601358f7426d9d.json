{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_4 - Presentasi Final test\\\\client\\\\src\\\\components\\\\beranda\\\\musiclist.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\nimport \"react-jinke-music-player/assets/index.css\"; // import { Link } from \"react-router-dom\";\n// import Movies from './movies/movies_';\n\nimport MoviesExtras from './movies/moviesExtra'; // import Tv from './tv/tv_';\n\nimport TvExtra from './tv/tvExtra';\nimport { connect } from \"react-redux\";\nimport { getMusics } from \"../redux/actions/musics\";\n\nclass MusicList extends Component {\n  componentDidMount() {\n    this.props.getMusics();\n  }\n\n  render() {\n    const {\n      data: dataMusic\n    } = this.props.music; // console.log(dataMusic);\n\n    const musicX = Object.values(dataMusic);\n    let {\n      ids,\n      homi\n    } = this.props;\n    let status = localStorage.getItem('token');\n\n    if (homi === \"homes\") {\n      this.displayTv = \"flex\";\n      this.displayMovies = \"flex\";\n      this.displayTvExtras = \"none\";\n      this.displayMovieExtras = \"none\";\n    } else if (homi !== \"homes\" && ids === 2) {\n      this.displayTv = \"flex\";\n      this.displayMovies = \"none\";\n      this.displayTvExtras = \"flex\";\n      this.displayMovieExtras = \"none\";\n    } else {\n      this.displayTv = \"none\";\n      this.displayMovies = \"flex\";\n      this.displayMovieExtras = \"flex\";\n      this.displayTvExtras = \"none\";\n    }\n\n    const display = {\n      tv: {\n        display: `${this.displayTv}`\n      },\n      movies: {\n        display: `${this.displayMovies}`\n      },\n      tvExtras: {\n        display: `${this.displayTvExtras}`\n      },\n      moviesExtras: {\n        display: `${this.displayMovieExtras}`\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: divPembungkus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"#EE4622\",\n        fontSize: 24,\n        fontWeight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Dengarkan Dan Rasakan    \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-light\",\n      id: \"tv-show\",\n      style: display.tv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: display.tv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, musicX.map(x => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 2,\n        lg: 2,\n        className: \"\",\n        key: x.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: \"#3A3A3A\"\n        },\n        className: \"rounded text-center pt-2 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/detail/\" + x.id + \"/\" + x.Artist.type + \"/\" + status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(ReactJkMusicPlayer, {\n        audioLists: x.attach,\n        autoPlay: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Image, {\n        src: `http://localhost:5000/public/${x.thumbnail}`,\n        style: setGambar,\n        key: x.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold text-left\",\n        style: {\n          overflow: \"hidden\",\n          width: 111,\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 57\n        }\n      }, x.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-light text-right\",\n        style: {\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 57\n        }\n      }, x.year)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-font-weight-light text-left pb-2 text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 53\n        }\n      }, x.Artist.name))));\n    })), /*#__PURE__*/React.createElement(Row, {\n      style: display.tvExtras,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, TvExtra.map(tvvv => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 3,\n        lg: 2,\n        className: \"m-3 \",\n        key: tvvv.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: tvvv.image,\n        style: setGambar,\n        key: tvvv.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }\n      }, tvvv.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      }, tvvv.year)));\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-light\",\n      id: \"movies\",\n      style: display.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Movies\"), /*#__PURE__*/React.createElement(Row, {\n      style: display.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, musicX.map(x => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 2,\n        lg: 2,\n        className: \"\",\n        key: x.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: \"#3A3A3A\"\n        },\n        className: \"rounded text-center pt-2 px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/detail/\" + x.id + \"/\" + x.Artist.type + \"/\" + status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: `http://localhost:5000/public/${x.thumbnail}`,\n        style: setGambar,\n        key: x.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-inline-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold text-left\",\n        style: {\n          overflow: \"hidden\",\n          width: 111,\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 49\n        }\n      }, x.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-light text-right\",\n        style: {\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 49\n        }\n      }, x.year)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-font-weight-light text-left pb-2 text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }\n      }, x.Artist.name))));\n    })), /*#__PURE__*/React.createElement(Row, {\n      style: display.moviesExtras,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, MoviesExtras.map(movieExtra => {\n      return /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        md: 3,\n        lg: 2,\n        className: \"m-3\",\n        key: movieExtra.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: movieExtra.image,\n        style: setGambar,\n        key: movieExtra.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-white text-font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 41\n        }\n      }, movieExtra.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted text-font-weight-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 41\n        }\n      }, movieExtra.year)));\n    }))));\n  }\n\n}\n\nconst setGambar = {\n  border: '2px solid white',\n  width: '130px',\n  heiight: '130px'\n};\nconst divPembungkus = {\n  backgroundColor: 'black',\n  marginTop: -35,\n  boxShadow: '-6px -42px 69px -8px rgba(0,0,0,0.75)',\n  paddingBottom: 20\n};\n\nconst mapStateToProps = state => {\n  return {\n    music: state.music\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMusics\n})(MusicList);","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_4 - Presentasi Final test/client/src/components/beranda/musiclist.js"],"names":["React","Component","Container","Row","Col","Image","ReactJkMusicPlayer","MoviesExtras","TvExtra","connect","getMusics","MusicList","componentDidMount","props","render","data","dataMusic","music","musicX","Object","values","ids","homi","status","localStorage","getItem","displayTv","displayMovies","displayTvExtras","displayMovieExtras","display","tv","movies","tvExtras","moviesExtras","divPembungkus","color","fontSize","fontWeight","map","x","id","background","Artist","type","attach","thumbnail","setGambar","overflow","width","title","year","name","tvvv","image","movieExtra","border","heiight","backgroundColor","marginTop","boxShadow","paddingBottom","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\r\nimport \"react-jinke-music-player/assets/index.css\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// import Movies from './movies/movies_';\r\nimport MoviesExtras from './movies/moviesExtra';\r\n// import Tv from './tv/tv_';\r\nimport TvExtra from './tv/tvExtra';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getMusics } from \"../redux/actions/musics\";\r\n\r\n\r\nclass MusicList extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getMusics();\r\n    }\r\n\r\n\r\n    render(){\r\n        const { data: dataMusic } = this.props.music;\r\n        // console.log(dataMusic);\r\n        const musicX = Object.values(dataMusic);\r\n\r\n        let { ids, homi } = this.props;\r\n\r\n        let status = localStorage.getItem('token');\r\n    \r\n        if( homi === \"homes\" ){\r\n            this.displayTv = \"flex\";\r\n            this.displayMovies = \"flex\";\r\n            this.displayTvExtras = \"none\";\r\n            this.displayMovieExtras = \"none\";\r\n        }else if ( homi !== \"homes\" && ids === 2  ){\r\n            this.displayTv = \"flex\";\r\n            this.displayMovies = \"none\";\r\n            this.displayTvExtras = \"flex\";\r\n            this.displayMovieExtras = \"none\";\r\n        }else{\r\n            this.displayTv = \"none\";\r\n            this.displayMovies = \"flex\";\r\n            this.displayMovieExtras = \"flex\";\r\n            this.displayTvExtras = \"none\";\r\n        }\r\n\r\n        const display = {\r\n            tv:{\r\n                display: `${this.displayTv}`\r\n            },\r\n            movies:{\r\n                display: `${this.displayMovies}`\r\n            },\r\n            tvExtras:{\r\n                display: `${this.displayTvExtras}`\r\n            },\r\n            moviesExtras:{\r\n                display: `${this.displayMovieExtras}`\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div style={divPembungkus}>\r\n            \r\n            <Container className=\"pt-3\">\r\n                \r\n                <div className=\"text-center my-5\">\r\n                    <p style={{color: \"#EE4622\", fontSize: 24, fontWeight: 20}}>Dengarkan Dan Rasakan    </p>\r\n                </div>\r\n                <div className=\"text-light\" id=\"tv-show\" style={display.tv}></div>\r\n                <Row style={display.tv}>\r\n                    {   \r\n                        musicX.map( x => {\r\n                            return (\r\n                                \r\n                                        <Col xs={5} md={2} lg={2} className=\"\" key={x.id} >\r\n                                            <div style={{background: \"#3A3A3A\"}} className=\"rounded text-center pt-2 px-2\"> \r\n                                                <a href={\"/detail/\"+ x.id + \"/\" + x.Artist.type + \"/\" + status} >\r\n                                                    <ReactJkMusicPlayer audioLists={x.attach} autoPlay={false} />\r\n                                                    <Image src={`http://localhost:5000/public/${x.thumbnail}`} style={setGambar} key={x.id} />\r\n                                                </a>  \r\n                                                <div className=\"pt-1\">\r\n                                                    <div className=\"d-inline-flex\">\r\n                                                        <p className=\"text-white text-font-weight-bold text-left\" style={{overflow: \"hidden\", width: 111, fontSize: 14}}>{x.title}</p>\r\n                                                        <p className=\"text-white text-font-weight-light text-right\" style={{fontSize: 14}}>{x.year}</p>\r\n                                                    </div>\r\n                                                    <p className=\"text-font-weight-light text-left pb-2 text-white\">{x.Artist.name}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                            \r\n                                    )\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n                <Row style={display.tvExtras}>\r\n                    {\r\n                        TvExtra.map( tvvv => {\r\n                            return <Col xs={5} md={3} lg={2} className=\"m-3 \" key={tvvv.id}>\r\n                                        <Image src={tvvv.image} style={setGambar} key={tvvv.id}/>\r\n                                        <div className=\"pt-1\">\r\n                                        <p  className=\"text-white text-font-weight-bold\">{tvvv.name}</p>\r\n                                        <p className=\"text-muted text-font-weight-light\">{tvvv.year}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n                <hr className=\"bg-white\" />\r\n                <div className=\"text-light\" id=\"movies\" style={display.movies}>Movies</div>\r\n                <Row style={display.movies}>\r\n                {   \r\n                        musicX.map( x => {\r\n                            return (\r\n                            \r\n                                <Col xs={5} md={2} lg={2} className=\"\" key={x.id} >\r\n                                    <div style={{background: \"#3A3A3A\"}} className=\"rounded text-center pt-2 px-2\"> \r\n                                        <a href={\"/detail/\"+ x.id + \"/\" + x.Artist.type + \"/\" + status} >\r\n                                            <Image src={`http://localhost:5000/public/${x.thumbnail}`} style={setGambar} key={x.id} />\r\n                                        </a>  \r\n                                        <div className=\"pt-1\">\r\n                                            <div className=\"d-inline-flex\">\r\n                                                <p className=\"text-white text-font-weight-bold text-left\" style={{overflow: \"hidden\", width: 111, fontSize: 14}}>{x.title}</p>\r\n                                                <p className=\"text-white text-font-weight-light text-right\" style={{fontSize: 14}}>{x.year}</p>\r\n                                            </div>\r\n                                            <p className=\"text-font-weight-light text-left pb-2 text-white\">{x.Artist.name}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                    \r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n                <Row style={display.moviesExtras}>\r\n                    {\r\n                        MoviesExtras.map( movieExtra => {\r\n                            return <Col xs={5} md={3} lg={2} className=\"m-3\" key={movieExtra.id}>\r\n                                        <Image src={movieExtra.image} style={setGambar} key={movieExtra.id}/>\r\n                                        <div className=\"pt-1\">\r\n                                        <p  className=\"text-white text-font-weight-bold\">{movieExtra.name}</p>\r\n                                        <p className=\"text-muted text-font-weight-light\">{movieExtra.year}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n\r\n            </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst setGambar = {\r\n    border: '2px solid white',\r\n    width: '130px',\r\n    heiight: '130px'\r\n} \r\n\r\nconst divPembungkus = {\r\n    backgroundColor: 'black',\r\n    marginTop: -35,\r\n    boxShadow: '-6px -42px 69px -8px rgba(0,0,0,0.75)',\r\n    paddingBottom: 20,\r\n   \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        music: state.music\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMusics })(MusicList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}