{"ast":null,"code":"var _jsxFileName = \"C:\\\\1. Eizeiky\\\\3. React\\\\dumbways react\\\\minggu_1\\\\dumbflix_ORM\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //Redux\n\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store';\nimport App from './App';\nimport Header from './components/beranda/header'; // import Logged from './components/beranda-login/headerLogin';\n\nimport ProfileAndPayment from './components/beranda-login/profileAndPayment';\nimport Admin from './components/beranda-admin/main';\nimport Detail from './components/beranda-mdetail/detail';\nimport AddEpisode from './components/beranda-mdetail/x-add_episode';\nimport AddFilm from './components/beranda-admin/x-add_film';\nimport PrivateRoute from \"./components/private/privateRoute\";\nimport { getUsers } from './components/redux/actions/user';\nimport * as serviceWorker from './serviceWorker';\n\nfunction Routes() {\n  const [isLogin, setLogin] = useState(false);\n  const [modalLogin, setModalLogin] = useState(false);\n  const [modalRegister, setModalRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const showModalLogin = () => {\n    setModalLogin(!modalLogin);\n    setModalRegister(false);\n  }; // localStorage.setItem('login', true )\n  // localStorage.setItem('logout', false )\n  // let login = localStorage.getItem('login');\n  // let logout = localStorage.getItem('logout');\n\n\n  const showModalRegister = () => {\n    setModalRegister(!modalRegister);\n    setModalLogin(false);\n  };\n\n  const handleLogout = () => {\n    setLogin(false);\n  };\n\n  const userLogin = [{\n    id: 1,\n    name: \"Ekky\",\n    email: \"ekky@gmail.com\",\n    password: \"admin\",\n    role: \"admin\"\n  }, {\n    id: 2,\n    name: \"User Biasa\",\n    email: \"user@gmail.com\",\n    password: \"user\",\n    role: \"user\"\n  }];\n\n  const handleLogin = payload => {\n    const isValid = userLogin.filter(user => user.email == payload.email && user.password == payload.password);\n\n    if (isValid.length) {\n      setLogin(true);\n      setModalLogin(false);\n    } else {\n      setError(\"invalid email and password\");\n      console.log(\"invalid email and password\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    isLogin: isLogin,\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: App,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/admin/:user\",\n    component: Admin,\n    isLogin: isLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/logpay/:type\",\n    component: ProfileAndPayment,\n    isLogin: isLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/detail/:id/:genre/:status\",\n    component: Detail,\n    isLogin: isLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/add_episode/:id/:genre/:status\",\n    component: AddEpisode,\n    isLogin: isLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/add_film/:status/:id\",\n    component: AddFilm,\n    isLogin: isLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })))));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Routes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/1. Eizeiky/3. React/dumbways react/minggu_1/dumbflix_ORM/src/index.js"],"names":["React","useState","ReactDOM","BrowserRouter","Router","Route","Switch","Provider","store","App","Header","ProfileAndPayment","Admin","Detail","AddEpisode","AddFilm","PrivateRoute","getUsers","serviceWorker","Routes","isLogin","setLogin","modalLogin","setModalLogin","modalRegister","setModalRegister","error","setError","showModalLogin","showModalRegister","handleLogout","userLogin","id","name","email","password","role","handleLogin","payload","isValid","filter","user","length","console","log","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store';\n\nimport App from './App';\nimport Header from './components/beranda/header';\n// import Logged from './components/beranda-login/headerLogin';\nimport ProfileAndPayment from './components/beranda-login/profileAndPayment';\nimport Admin from './components/beranda-admin/main';\nimport Detail from './components/beranda-mdetail/detail';\nimport AddEpisode from './components/beranda-mdetail/x-add_episode';\nimport AddFilm from './components/beranda-admin/x-add_film';\nimport PrivateRoute from \"./components/private/privateRoute\";\nimport { getUsers } from './components/redux/actions/user';\n\nimport * as serviceWorker from './serviceWorker';\n\nfunction Routes(){\n\n  const [isLogin, setLogin] = useState(false);\n  const [modalLogin, setModalLogin] = useState(false);\n  const [modalRegister, setModalRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const showModalLogin = () => {\n    setModalLogin(!modalLogin);\n    setModalRegister(false);\n  };\n\n// localStorage.setItem('login', true )\n// localStorage.setItem('logout', false )\n// let login = localStorage.getItem('login');\n// let logout = localStorage.getItem('logout');\n\n\n  const showModalRegister = () => {\n    setModalRegister(!modalRegister);\n    setModalLogin(false);\n  };\n\n  const handleLogout = () => {\n    setLogin(false);\n  };\n\n  const userLogin = [\n    {\n      id: 1,\n      name: \"Ekky\",\n      email: \"ekky@gmail.com\",\n      password: \"admin\",\n      role: \"admin\",\n    },\n    {\n      id: 2,\n      name: \"User Biasa\",\n      email: \"user@gmail.com\",\n      password: \"user\",\n      role: \"user\",\n    },\n  ];\n\n  const handleLogin = (payload) => {\n    const isValid = userLogin.filter(\n      (user) => user.email == payload.email && user.password == payload.password\n    );\n\n    if (isValid.length) {\n      setLogin(true);\n      setModalLogin(false);\n    } else {\n      setError(\"invalid email and password\");\n      console.log(\"invalid email and password\");\n    }\n  };\n\n\n  return(\n    <Provider store={store}>\n    <div>\n        <Router>\n          <Header \n            isLogin={isLogin}\n            handleLogin={handleLogin}\n          />\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n            <PrivateRoute\n              exact\n              path=\"/admin/:user\"\n              component={Admin}\n              isLogin={isLogin}\n            />\n            <PrivateRoute\n              exact\n              path=\"/logpay/:type\"\n              component={ProfileAndPayment}\n              isLogin={isLogin}\n            />\n            <PrivateRoute\n              exact\n              path=\"/detail/:id/:genre/:status\"\n              component={Detail}\n              isLogin={isLogin}\n            />\n            <PrivateRoute\n              exact\n              path=\"/add_episode/:id/:genre/:status\"\n              component={AddEpisode}\n              isLogin={isLogin}\n            />\n            <PrivateRoute\n              exact\n              path=\"/add_film/:status/:id\"\n              component={AddFilm}\n              isLogin={isLogin}\n            />\n        </Switch>\n      </Router>\n    </div>\n    </Provider>\n  )\n}\n\n\nReactDOM.render(\n  <>\n    <Routes />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}